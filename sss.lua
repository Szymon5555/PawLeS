do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v68=0;while true do if (v68==0) then v19=v0(v3(v30,1,1));return "";end end else local v69=0;local v70;while true do if (0==v69) then v70=v2(v0(v30,16));if v19 then local v87=v5(v70,v19);v19=nil;return v87;else return v70;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v71=(v31/((1 + 1)^(v32-(377 -(27 + 349)))))%((3 -1)^(((v33-(4 -3)) -(v32-(1 + 0))) + 1 + 0)) ;return v71-(v71%(1 -0)) ;else local v72=253 -((126 -56) + (782 -(590 + 9))) ;local v73;while true do if (v72==(0 + 0)) then v73=2^(v32-(1 + 0)) ;return (((v31%(v73 + v73))>=v73) and (1123 -(426 + (1565 -869)))) or 0 ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=0 + 0 ;local v36;local v37;while true do if (v35==((1841 -(1528 + 312)) + 0)) then return (v37 * (375 -119)) + v36 ;end if (v35==((0 -0) -0)) then v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (851 -(369 + 480)) ;v35=1 -0 ;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + (215 -(134 + 78)) );v18=v18 + 4 ;return (v41 * ((2865263 -735065) + 14647018)) + (v40 * (65585 -((40 -13) + 22))) + (v39 * (808 -552)) + v38 ;end local function v24()local v42=v23();local v43=v23();local v44=3 -2 ;local v45=(v20(v43,2 -1 ,7 + 13 ) * ((2 + 0)^(519 -(442 + 45)))) + v42 ;local v46=v20(v43,503 -(402 + 80) ,1974 -(1281 + 662) );local v47=((v20(v43,1291 -(904 + 355) )==(1 -0)) and  -(1 + 0 + 0)) or 1 ;if (v46==(0 -0)) then if (v45==((0 -0) -0)) then return v47 * (0 -0) ;else v46=1 -0 ;v44=(0 -0) -0 ;end elseif (v46==(1089 + 958)) then return ((v45==(0 -(1812 -(20 + 1792)))) and (v47 * ((1 + 0)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-((1375 -(425 + 166)) + 239) ) * (v44 + (v45/(((2 + 5) -(618 -(151 + 462)))^(1589 -(657 + 880))))) ;end local function v25(v48)local v49;if  not v48 then local v74=0 -(1928 -(835 + 1093)) ;while true do if (v74==(0 -0)) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v65=1 + 0 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v67=0;while true do if (v67==0) then if (v51==0) then local v84=1903 -(1881 + 22) ;while true do if (v84~=1) then else v54={};v55={v52,v53,nil,v54};v84=1 + 1 ;end if ((0 -0)==v84) then local v104=0;while true do if (v104~=1) then else v84=1;break;end if (v104==(0 + 0)) then v52={};v53={};v104=1;end end end if (2~=v84) then else v51=1 -0 ;break;end end end if (v51~=2) then else local v85=526 -(507 + 19) ;while true do if (v85==(3 -2)) then for v111=1 + 0 ,v23() do v54[v111]=v23();end return v55;end if (0~=v85) then else local v105=0 + 0 ;while true do if (v105==0) then for v117=1,v23() do local v118=673 -(155 + 518) ;local v119;local v120;local v121;while true do if (v118==(0 -0)) then v119=0;v120=nil;v118=1034 -(55 + 978) ;end if (v118==(1 + 0)) then v121=nil;while true do if ((1 -0)==v119) then while true do if (v120==(0 -0)) then v121=v21();if (v20(v121,2 -1 ,3 -2 )~=(0 + 0)) then else local v145=0;local v146;local v147;local v148;local v149;local v150;local v151;while true do if (v145~=2) then else v150=nil;v151=nil;v145=3 + 0 ;end if (v145~=1) then else v148=nil;v149=nil;v145=7 -5 ;end if (v145==(10 -7)) then while true do if (v146~=1) then else v149=nil;v150=nil;v146=1 + 1 ;end if (v146~=2) then else v151=nil;while true do if (v147==(1286 -(471 + 813))) then while true do if (v148==1) then local v192=0;local v193;local v194;while true do if (v192==1) then while true do if (v193==0) then v194=0;while true do if (0==v194) then v151={v22(),v22(),nil,nil};if (v149==(0 + 0)) then local v208=0 -0 ;local v209;local v210;local v211;while true do if (v208==(486 -(25 + 461))) then v209=0 + 0 ;v210=nil;v208=2 -1 ;end if (v208~=1) then else v211=nil;while true do if ((1 + 0)~=v209) then else while true do if (v210==0) then v211=0 -0 ;while true do if (v211==(0 -0)) then v151[1592 -(832 + 757) ]=v22();v151[1684 -(1265 + 415) ]=v22();break;end end break;end end break;end if (0==v209) then v210=0;v211=nil;v209=902 -(179 + 722) ;end end break;end end elseif (v149==1) then v151[3]=v23();elseif (v149==2) then v151[9 -6 ]=v23() -(2^16) ;elseif (v149==(8 -5)) then local v218=0;local v219;local v220;while true do if (v218==1) then while true do if (v219==(1501 -(573 + 928))) then v220=0 -0 ;while true do if (v220~=0) then else v151[4 -1 ]=v23() -((2 -0)^16) ;v151[4]=v22();break;end end break;end end break;end if (v218==0) then v219=0;v220=nil;v218=1854 -(98 + 1755) ;end end end v194=920 -(41 + 878) ;end if (v194==(2 -1)) then v148=2;break;end end break;end end break;end if (0==v192) then v193=0 -0 ;v194=nil;v192=3 -2 ;end end end if (v148~=3) then else if (v20(v150,14 -11 ,590 -(239 + 348) )~=1) then else v151[4]=v57[v151[5 -1 ]];end v52[v117]=v151;break;end if (0==v148) then local v196=0 -0 ;local v197;while true do if (v196==0) then v197=0 + 0 ;while true do if ((1 + 0)==v197) then v148=928 -(890 + 37) ;break;end if (v197==(0 + 0)) then v149=v20(v121,2,3);v150=v20(v121,4,23 -17 );v197=1;end end break;end end end if (v148~=(448 -(226 + 220))) then else local v198=0;while true do if (v198==(268 -(4 + 264))) then local v202=0;local v203;while true do if (v202~=0) then else v203=0;while true do if (v203~=1) then else v198=1147 -(356 + 790) ;break;end if (v203==0) then local v207=0;while true do if (v207==(1 + 0)) then v203=1;break;end if ((1288 -(174 + 1114))==v207) then if (v20(v150,1,1)==(1 + 0)) then v151[2]=v57[v151[2]];end if (v20(v150,2,9 -7 )~=(4 -3)) then else v151[3 + 0 ]=v57[v151[3]];end v207=1375 -(228 + 1146) ;end end end end break;end end end if (v198==(222 -(60 + 161))) then v148=8 -5 ;break;end end end end break;end if (v147==(0 -0)) then v148=0 + 0 ;v149=nil;v147=1;end if (1==v147) then v150=nil;v151=nil;v147=2;end end break;end if (v146==0) then local v175=0;while true do if (v175==(1997 -(1093 + 904))) then v147=0 + 0 ;v148=nil;v175=757 -(138 + 618) ;end if (v175==(1 + 0)) then v146=1 + 0 ;break;end end end end break;end if (v145~=(0 + 0)) then else v146=0;v147=nil;v145=1901 -(243 + 1657) ;end end end break;end end break;end if (v119==0) then v120=0 -0 ;v121=nil;v119=1 + 0 ;end end break;end end end for v122=809 -(94 + 714) ,v23() do v53[v122-1 ]=v28();end v105=2 -1 ;end if (v105~=1) then else v85=208 -(185 + 22) ;break;end end end end end v67=80 -(40 + 39) ;end if (1~=v67) then else if (v51~=(1 + 0)) then else v56=v23();v57={};for v88=1,v56 do local v89=0 + 0 ;local v90;local v91;local v92;local v93;while true do if (v89~=(0 + 0)) then else v90=0;v91=nil;v89=311 -(35 + 275) ;end if (v89~=(2 + 0)) then else while true do if (v90~=1) then else v93=nil;while true do if (v91==1) then if (v92==1) then v93=v21()~=(0 -0) ;elseif (v92==(2 + 0)) then v93=v24();elseif (v92~=(1486 -(1260 + 223))) then else v93=v25();end v57[v88]=v93;break;end if (v91==0) then v92=v21();v93=nil;v91=1 + 0 ;end end break;end if (v90==(439 -(69 + 370))) then local v124=1257 -(1204 + 53) ;while true do if (v124==1) then v90=4 -3 ;break;end if (v124==(0 -0)) then v91=1164 -(716 + 448) ;v92=nil;v124=1 + 0 ;end end end end break;end if (v89==(1 -0)) then v92=nil;v93=nil;v89=2 + 0 ;end end end v55[3]=v21();v51=1438 -(254 + 1182) ;end break;end end end end local function v29(v58,v59,v60)local v61=0;local v62;local v63;local v64;while true do if (v61==1) then v64=v58[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==3) then A,B=v27(v11(v83));if  not A[1] then local v106=0;local v107;while true do if (v106==0) then v107=v58[4][v79] or "?" ;error("Script error at ["   .. v107   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (2==v78) then v83=nil;function v83()local v94=v62;local v95=v63;local v96=v64;local v97=v27;local v98={};local v99={};local v100={};for v108=0 -0 ,v82 do if ((v108>=v96) or (((822 -(6 + 377)) + 1951)<(3136 -(383 + 861)))) then v98[v108-v96 ]=v81[v108 + (160 -(95 + (217 -153))) ];else v100[v108]=v81[v108 + (1 -0) ];end end local v101=(v82-v96) + 1 ;local v102;local v103;while true do local v109=0 + 0 ;local v110;while true do if (((3249 -(48 + 870))>(352 + 180)) and (v109==(0 + 0))) then v110=1663 -(1659 + 4) ;while true do if ((v110==(0 -0)) or ((4013 -(272 + 1207))>=(3593 -((90 -47) + 29)))) then v102=v94[v79];v103=v102[1];v110=1;end if (((1169 + 3657)<=(2583 + 2345)) and (v110==(1 -(1208 -(666 + 542))))) then if (((1994 + 2536)>(1442 + (933 -578))) and (v103<=(24 -(319 -(291 + 12))))) then if ((v103<=(6 -3)) or (((3927 -(116 + 237)) -(120 + 1551))<=(3265 -(149 + 1246)))) then if (((2017 -(293 + 1032))<=1281) and (v103<=1)) then if (((3463 -(211 + 38))>(868 + 1573)) and (v103>((1638 -(25 + 132)) -((554 -(6 + 23)) + 956)))) then v100[v102[2]][v102[6 -3 ]]=v100[v102[7 -3 ]];else local v130=956 -(595 + 361) ;local v131;local v132;local v133;while true do if ((218<=498) and (v130==(1167 -(148 + 1018)))) then v133=nil;while true do if ((v131==0) or (3997<(3527 -(1117 + 401)))) then v132=0 + 0 ;v133=nil;v131=1;end if ((v131==(2 -1)) or ((17171 -12265)<(2143 + 1172))) then while true do if (((1272 -(136 + 3))==((5191 -3764) -(238 + 56))) and (v132==0)) then v133=v102[3 -1 ];v100[v133]=v100[v133]();break;end end break;end end break;end if ((v130==(0 + 0)) or ((70 + 4719)<=(33 + 248))) then v131=0;v132=nil;v130=1 + 0 ;end end end elseif (((4385 -(926 + 61))>(4724 -2595)) and (v103>(1 + 1))) then local v134=0;local v135;while true do if (((1296 + 0)==1296) and (v134==(0 -0))) then v135=v102[3 -1 ];v100[v135]=v100[v135](v13(v100,v135 + 1 ,v102[3]));break;end end else v100[v102[2]]=v29(v95[v102[260 -(119 + (407 -269)) ]],nil,v60);end elseif (((4083 + (2453 -(1065 + 827)))>=(6019 -(930 + 772))) and (v103<=((956 -(212 + 741)) + 2))) then if (((4796 -1181)>(75 + 495)) and (v103>(3 + 1))) then for v152=v102[1 + 1 ],v102[1 + 2 ] do v100[v152]=nil;end else v100[v102[5 -3 ]]={};end elseif ((v103<=6) or ((604 + 972)>=(3107 -(697 + (1052 -700))))) then v100[v102[1086 -(873 + 211) ]]=v102[5 -2 ];elseif (((124 + (1369 -1049))==444) and (v103==(29 -22))) then v100[v102[1156 -((2312 -1274) + 116) ]]=v100[v102[1426 -(504 + 919) ]];else local v156=0 + 0 ;local v157;local v158;local v159;local v160;local v161;local v162;while true do if (((3674 -(363 + 138))==(7848 -4675)) and (v156==((452 -(102 + 350)) + 0))) then v157=0;v158=nil;v156=1704 -(213 + 1490) ;end if (((218 + 50)==(16 + 252)) and (v156==3)) then while true do if ((v157==0) or ((3150 -(1500 + 670))==(255 + 552))) then v158=(0 -0) + 0 ;v159=nil;v157=1 + 0 ;end if (((15224 -10329)>=(1010 + 1523)) and (v157==2)) then v162=nil;while true do if ((v158==(1 + 0)) or ((5093 -(1127 + 108))>(5638 -(671 + 1087)))) then local v186=0;local v187;while true do if ((4032>(2593 -(327 + 31 + 123))) and (v186==(0 + 0))) then v187=1051 -(271 + 780) ;while true do if (((1041 -749)<(6699 -(240 + 1152 + 550))) and (v187==(3 -2))) then v158=3 -1 ;break;end if ((v187==((715 -(7 + 4)) -(44 + 660))) or ((4722 -(2572 -(33 + 33)))>=(1074 + 1479))) then local v204=0 -0 ;while true do if ((v204==(0 -0)) or ((18 + 325)>1356)) then v80=(v161 + v159) -1 ;v162=1574 -(720 + 854) ;v204=(4 -1) -2 ;end if ((4598>=(5102 -3547)) and (v204==(1 + (1981 -(1615 + 366))))) then v187=1 + 0 ;break;end end end end break;end end end if ((3086<=(9803 -6364)) and (v158==2)) then for v189=v159,v80 do local v190=526 -(50 + 476) ;local v191;while true do if ((v190==(0 -0)) or ((831 + 19)==(276 + 2494))) then v191=0 -0 ;while true do if (((1509 + 1572)>=((47 -31) -6)) and (v191==(191 -(102 + 89)))) then v162=v162 + 1 + 0 ;v100[v189]=v160[v162];break;end end break;end end end break;end if ((v158==(0 -0)) or ((2171 + 1988)==(1090 + 3887))) then local v188=940 -(492 + 448) ;while true do if ((1778<=(3851 -1241)) and (v188==(0 + (1933 -(1495 + 438))))) then v159=v102[311 -(8 + 301) ];v160,v161=v97(v100[v159](v13(v100,v159 + (1072 -((1518 -(605 + 624)) + 782)) ,v102[1884 -(1482 + (2354 -(1133 + 822))) ])));v188=981 -(526 + 454) ;end if (((814 + 1427)==(1848 + 393)) and (v188==(1 + (189 -(65 + 124))))) then v158=1 + 0 ;break;end end end end break;end if ((v157==(1 + (0 -0))) or ((5528 -(733 + 1066))<=(12064 -9248))) then local v176=0;while true do if ((v176==0) or ((1655 -1200)==(200 + 4298))) then v160=nil;v161=nil;v176=(2 -1) + 0 ;end if (((4337 -2673)==((3960 -1193) -1103)) and (v176==(1 -0))) then v157=3 -1 ;break;end end end end break;end if (((3622 -(1040 + (2978 -2282)))<(894 + 536 + 2523)) and (v156==((7 -5) + 0))) then v161=nil;v162=nil;v156=1 + 2 + 0 ;end if ((v156==(1874 -(1858 + 15))) or ((6511 -4769)>=((3109 + 960) -(160 + 61 + 445)))) then v159=nil;v160=nil;v156=1791 -(1518 + 271) ;end end end elseif ((v103<=(573 -(45 + 515))) or ((3814 -(164 + 38 + 76))<=1761)) then if ((2121<=(53 + 4946)) and (v103<=(19 -9))) then if (((6663 -(609 + 1079))>=(2132 + 405)) and (v103>((41 -30) -2))) then do return;end else v79=v102[1089 -(508 + 578) ];end elseif (((2997 -(886 + 503))>=1322) and (v103<=(1 + 10))) then v100[v102[2]]();elseif ((v103>(41 -29)) or ((282 + 21 + 758 + 415)==(2832 -(95 + 1491)))) then local v163=495 -(162 + 333) ;local v164;local v165;local v166;while true do if (((1190 -575)==(2984 -2369)) and (v163==(0 + 0))) then v164=0;v165=nil;v163=1925 -(409 + 1515) ;end if (((8961 -5863)>(1818 + 49 + 191)) and (v163==(3 -2))) then v166=nil;while true do if ((((5821 -(405 + 800)) -3030)>(447 + 361)) and (v164==(0 -0))) then v165=v102[601 -(471 + 128) ];v166=v100[v102[3]];v164=1556 -(1465 + 90) ;end if ((v164==1) or (2105<710)) then v100[v165 + (3 -2) ]=v166;v100[v165]=v166[v102[1 + 3 ]];break;end end break;end end else v100[v102[1263 -(177 + 1084) ]]=v102[3 + 0 ]~=(184 -(73 + 78 + (702 -(584 + 85)))) ;end elseif (((7082 -2819)>(16638 -12915)) and (v103<=(1685 -(792 + 878)))) then if ((v103==(56 -42)) or ((501 + 118)==(530 + 1020))) then v100[v102[2 + 0 ]][v102[1636 -(1060 + 573) ]]=v102[28 -(8 + 16) ];else v100[v102[2]]=v60[v102[1 + 2 ]];end elseif ((v103<=((1323 -910) -(113 + (703 -419)))) or ((176 + 4173)==((707 + 2227) -(488 + 1190)))) then if ((v100[v102[1359 -((994 -(128 + 99)) + 590) ]]==v102[2 + 2 ]) or ((4604 -(120 + 32))<=(1822 -(997 -683)))) then v79=v79 + (1 -0) ;else v79=v102[1 + 2 ];end elseif (((6211 -(229 + 1568))>=(317 + 70)) and (v103>(1 + 16))) then if (((1427 -293)==((7529 -4574) -1821)) and (v102[8 -6 ]==v100[v102[6 -2 ]])) then v79=v79 + (885 -(746 + 138)) ;else v79=v102[1 + 2 ];end else local v169=0;local v170;local v171;while true do if (((3473 -2552)==(2599 -1678)) and (v169==(3 -2))) then while true do if ((v170==((643 -(273 + 370)) -(0 + 0))) or ((3165 -(102 + 544))==(7768 -4898))) then v171=v102[2 -0 ];v100[v171]=v100[v171](v13(v100,v171 + (1 -0) ,v80));break;end end break;end if ((v169==(0 -0)) or ((1877 + 1297)>4180)) then v170=0;v171=nil;v169=2 -1 ;end end end v79=v79 + 1 ;break;end end break;end end end end v78=3;end if (v78==1) then v81={...};v82=v12("#",...) -1 ;v78=2;end end end;end if (v61==0) then v62=v58[1];v63=v58[2];v61=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
