do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v74=0;while true do if (v74==0) then v19=v0(v3(v30,1,1));return "";end end else local v75=v2(v0(v30,16));if v19 then local v93=0;local v94;while true do if (v93==0) then v94=v5(v75,v19);v19=nil;v93=1;end if (v93==1) then return v94;end end else return v75;end end end);local function v20(v31,v32,v33)if v33 then local v76=0 -0 ;local v77;while true do if (v76==((0 -0) -0)) then v77=(v31/((777 -(239 + 536))^(v32-(30 -((30 -8) + 7)))))%(2^(((v33-(2 -(1 + 0))) -(v32-(33 -(20 + 12)))) + (1 -0))) ;return v77-(v77%1) ;end end else local v78=(472 -(31 + 439))^(v32-(1 + 0)) ;return (((v31%(v78 + v78))>=v78) and (1 -0)) or (0 -0) ;end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + ((1520 + 303) -(1186 + 636)) ;v34=(2455 -764) -(9 + 1681) ;end if (v34==1) then return v35;end end end local function v22()local v36=0 + 0 ;local v37;local v38;while true do if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (4 -2) + 0 );v18=v18 + (1959 -(486 + 1471)) ;v36=2 -1 ;end if (v36==(1 -0)) then return (v38 * (139 + 117)) + v37 ;end end end local function v23()local v39=0 + 0 + 0 ;local v40;local v41;local v42;local v43;while true do if (v39==(0 + 0)) then v40,v41,v42,v43=v1(v16,v18,v18 + (5 -2) );v18=v18 + 1 + 3 ;v39=2 -1 ;end if (v39==(1927 -(936 + (1682 -(562 + 130))))) then return (v43 * (16777825 -(467 + 142))) + (v42 * ((68225 -(182 + 1322)) -(496 + 689))) + (v41 * (312 -56)) + v40 ;end end end local function v24()local v44=v23();local v45=v23();local v46=1703 -(606 + 143 + 953) ;local v47=(v20(v45,1,20) * ((5 -3)^(2004 -(1282 + 690)))) + v44 ;local v48=v20(v45,13 + 8 ,20 + 11 );local v49=((v20(v45,47 -15 )==(1 + 0)) and  -(1 -0)) or ((750 -(41 + 694)) -(4 + 10)) ;if (v48==(0 + (0 -0))) then if (v47==(0 + 0)) then return v49 * ((0 + 0) -0) ;else local v95=0 + 0 ;while true do if (v95==(0 -0)) then v48=205 -(121 + 25 + 58) ;v46=976 -((208 -103) + 871) ;break;end end end elseif (v48==(5204 -3157)) then return ((v47==(697 -((1270 -(568 + 697)) + 692))) and (v49 * ((1821 -(1635 + 185))/(0 -0)))) or (v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + (v47/((2 + 0)^52))) ;end local function v25(v50)local v51=0;local v52;local v53;while true do if (((1692 -708) -(691 + 293))==v51) then v52=nil;if  not v50 then v50=v23();if (v50==0) then return "";end end v51=(2637 -(42 + 1848)) -(53 + 693) ;end if (v51==(7 -4)) then return v6(v53);end if (v51==(2 -0)) then v53={};for v96=1 + 0 , #v52 do v53[v96]=v2(v1(v3(v52,v96,v96)));end v51=1515 -(799 + 713) ;end if (v51==(1 + 0)) then v52=v3(v16,v18,(v18 + v50) -(944 -(940 + 3)) );v18=v18 + v50 ;v51=1 + (1 -0) ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0 -0 ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54==(1 + 1)) then v59=nil;v60=nil;v54=3 + 0 ;end if (v54~=(4 -1)) then else v61=nil;v62=nil;v54=4;end if (0==v54) then v55=0 -0 ;v56=nil;v54=1;end if (v54==(1 + 0)) then v57=nil;v58=nil;v54=1 + 1 ;end if (v54~=(4 + 0)) then else while true do if (v55~=0) then else local v102=0 -0 ;while true do if (v102==(3 -2)) then v55=1;break;end if (v102~=(153 -(145 + 8))) then else v56=0;v57=nil;v102=1 + 0 ;end end end if (v55==(3 + 0)) then v62=nil;while true do if (v56~=2) then else for v108=3 -2 ,v61 do local v109=0;local v110;local v111;local v112;while true do if (v109~=(0 + 0)) then else local v118=1006 -(367 + 639) ;while true do if ((1 + 0)==v118) then v109=1 + 0 ;break;end if (v118==0) then v110=0 + 0 ;v111=nil;v118=1341 -(1061 + 279) ;end end end if (v109==(3 -2)) then v112=nil;while true do if (v110~=(2 -1)) then else if (v111==1) then v112=v21()~=(0 + 0) ;elseif (v111==(2 -0)) then v112=v24();elseif (v111==(1 + 2)) then v112=v25();end v62[v108]=v112;break;end if (v110==(450 -(251 + 199))) then local v121=0;while true do if (v121==(369 -(162 + 206))) then v110=1 -0 ;break;end if (v121~=(0 -0)) then else local v152=1978 -(139 + 1839) ;while true do if ((459 -(293 + 165))==v152) then v121=1;break;end if (v152==0) then v111=v21();v112=nil;v152=2 -1 ;end end end end end end break;end end end v60[945 -(599 + 343) ]=v21();for v113=1 + 0 ,v23() do local v114=0 + 0 ;local v115;local v116;while true do if (v114~=1) then else while true do if (v115==(0 -0)) then v116=v21();if (v20(v116,3 -2 ,1 -0 )~=0) then else local v147=0 -0 ;local v148;local v149;local v150;local v151;while true do if (v147~=(338 -(239 + 98))) then else local v168=0 -0 ;while true do if (v168~=(1 + 0)) then else v147=2 + 0 ;break;end if (v168~=(0 + 0)) then else v150=nil;v151=nil;v168=1 -0 ;end end end if (v147~=(815 -(262 + 553))) then else local v169=535 -(231 + 304) ;while true do if (v169~=(1 + 0)) then else v147=1;break;end if (v169==(0 + 0)) then v148=0 -0 ;v149=nil;v169=1;end end end if ((1 + 1)==v147) then while true do if (v148==0) then local v176=0;while true do if (v176~=1) then else v148=1;break;end if (v176~=0) then else v149=v20(v116,1 + 1 ,1915 -(546 + 1366) );v150=v20(v116,3 + 1 ,10 -4 );v176=1;end end end if (v148==(886 -(406 + 478))) then local v177=0 + 0 ;while true do if (v177~=(3 -2)) then else v148=684 -(609 + 72) ;break;end if (v177~=(0 + 0)) then else local v188=0;while true do if (v188~=(0 -0)) then else if (v20(v150,1 + 0 ,2 -1 )==(1 + 0)) then v151[2]=v62[v151[2]];end if (v20(v150,1878 -(40 + 1836) ,361 -(111 + 248) )~=(2 -1)) then else v151[3]=v62[v151[5 -2 ]];end v188=752 -(443 + 308) ;end if (v188~=(1 + 0)) then else v177=1;break;end end end end end if (v148==1) then local v178=0;while true do if (v178~=(0 -0)) then else v151={v22(),v22(),nil,nil};if (v149==(0 + 0)) then local v193=66 -(13 + 53) ;local v194;while true do if (v193==(0 + 0)) then v194=1695 -(545 + 1150) ;while true do if (0==v194) then v151[957 -(734 + 220) ]=v22();v151[1715 -(802 + 909) ]=v22();break;end end break;end end elseif (v149==(1 + 0)) then v151[3]=v23();elseif (v149==(4 -2)) then v151[2 + 1 ]=v23() -(2^(41 -25)) ;elseif (v149==(3 -0)) then local v203=249 -(65 + 184) ;while true do if (v203==0) then v151[2 + 1 ]=v23() -((1 + 1)^16) ;v151[11 -7 ]=v22();break;end end end v178=1448 -(1101 + 346) ;end if (v178==(1 + 0)) then v148=5 -3 ;break;end end end if (3~=v148) then else if (v20(v150,3 + 0 ,2 + 1 )~=(1293 -(945 + 347))) then else v151[1 + 3 ]=v62[v151[1819 -(582 + 1233) ]];end v57[v113]=v151;break;end end break;end end end break;end end break;end if (v114~=0) then else local v119=1071 -(613 + 458) ;while true do if (v119~=(440 -(172 + 267))) then else v114=1510 -(121 + 1388) ;break;end if (v119==(0 + 0)) then v115=0;v116=nil;v119=1 + 0 ;end end end end end v56=2 + 1 ;end if (v56~=0) then else v57={};v58={};v59={};v56=1;end if (v56~=3) then else local v104=0;while true do local v117=0 + 0 ;while true do if (v117==(0 + 0)) then if (v104==(706 -(21 + 684))) then return v60;end if ((0 -0)~=v104) then else for v122=1 + 0 ,v23() do v58[v122-(1229 -(316 + 912)) ]=v28();end for v124=1,v23() do v59[v124]=v23();end v104=1;end break;end end end end if (v56~=1) then else local v105=0;while true do if (v105~=0) then else v60={v57,v58,nil,v59};v61=v23();v105=1;end if (v105~=(1 + 0)) then else v62={};v56=2;break;end end end end break;end if (1==v55) then v58=nil;v59=nil;v55=1955 -(177 + 1776) ;end if (v55==2) then v60=nil;v61=nil;v55=5 -2 ;end end break;end end end local function v29(v63,v64,v65)local v66=v63[1];local v67=v63[2];local v68=v63[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v79=v66;local v80=v67;local v81=v68;local v82=v27;local v83={};local v84={};local v85={};for v89=(2709 -1772) -((1255 -(176 + 577)) + 435) ,v72 do if ((v89>=v81) or ((1119 -(13 + 1))>((19227 -13225) -4305))) then v83[v89-v81 ]=v71[v89 + (173 -(6 + 166)) ];else v85[v89]=v71[v89 + (340 -(293 + 46)) ];end end local v86=(v72-v81) + 1 + 0 ;local v87;local v88;while true do local v90=(2248 -1411) -(810 + 27) ;local v91;while true do if (((111 + 73 + 262)<(1366 + 2657)) and (v90==(1581 -(243 + 1338)))) then v91=0 -0 ;while true do if (((14598 -9878)==(32 + 4688)) and (v91==(1335 -(620 + 714)))) then if ((v88<=((26 -8) -10)) or ((6849 -4354)<=(2979 -1368))) then if (((4068 -(269 + 729))>=(3122 -(851 + 1125))) and (v88<=(5 -2))) then if (((4666 -(26 + 9))>(3440 + (1432 -817))) and (v88<=1)) then if ((v88==(1842 -((437 -(224 + 17)) + 1646))) or ((2281 -(2177 -1289))>((3066 -(522 + 479)) + 1494))) then local v126=0 -0 ;local v127;local v128;local v129;local v130;local v131;while true do if ((v126==(1 + 0)) or ((6230 -4410)<(848 -(26 + 662)))) then v129=nil;v130=nil;v126=686 -((1792 -1353) + 245) ;end if ((v126==((4076 -2189) -(180 + 1707))) or ((857 + 284)>(6478 -2655))) then v127=0;v128=nil;v126=1548 -(818 + 729) ;end if ((v126==(8 -6)) or ((1933 + 162)==(309 + 944))) then v131=nil;while true do if ((v127==(1 + 0)) or (((277 -147) + (543 -(323 + 153)))==(309 -55))) then v70=(v130 + v128) -(1058 -(615 + 442)) ;v131=195 -(44 + 151) ;v127=71 -(34 + 35) ;end if ((v127==(1 + 1 + 0)) or ((900 -((1149 -(444 + 638)) + (1986 -(1190 + 758))))>=(7960 -3115))) then for v180=v128,v70 do local v181=914 -(602 + 312) ;while true do if (((4321 -1896)<(18053 -14249)) and (((1240 -(1057 + 183)) + (1061 -(498 + 563)))==v181)) then v131=v131 + (3 -2) ;v85[v180]=v129[v131];break;end end end break;end if ((v127==0) or ((10663 -6013)<(199 + 65))) then v128=v87[4 -(504 -(153 + 349)) ];v129,v130=v82(v85[v128](v13(v85,v128 + ((6 -3) -2) ,v87[1 + 2 ])));v127=1;end end break;end end elseif ((v87[9 -7 ]==v85[v87[(12 -6) -2 ]]) or ((1428 + 1347)<=(1354 + 349))) then v69=v69 + (267 -(150 + 116)) ;else v69=v87[1897 -(480 + 1414) ];end elseif ((v88>(2 + 0)) or ((1793 + 118)<(8961 -7094))) then do return;end else local v132=0 + 0 ;local v133;while true do if (((6239 -(600 + 1394))>=(103 + 1802)) and ((1019 -(812 + 207))==v132)) then v133=v87[4 -2 ];v85[v133]=v85[v133](v13(v85,v133 + (577 -(413 + 163)) ,v87[10 -7 ]));break;end end end elseif ((v88<=(1888 -(844 + 1039))) or (4578<((3824 -(15 + 626)) -(1063 + 460)))) then if (((1951 + 1122)<=(5701 -(826 + 537))) and (v88>(4 + 0))) then v85[v87[187 -(115 + 70) ]]=v65[v87[7 -4 ]];else v85[v87[2 -(0 -0) ]]=v87[3 + 0 ]~=(0 + 0) ;end elseif (((1158 + 706)>(5774 -4252)) and (v88<=(1531 -(342 + 1183)))) then v85[v87[2 + (0 -0) ]]={};elseif ((v88>((1368 -(1057 + 305)) + 1)) or ((3287 -(513 + 923))<(462 + 418))) then v85[v87[539 -(463 + 74) ]]=v85[v87[3]];else local v156=(1117 -(181 + 936)) + 0 ;local v157;while true do if ((v156==(0 + (0 -0))) or (((1127 + 1801) -767)<(1442 + 640))) then v157=v87[57 -(6 + 49) ];v85[v157]=v85[v157](v13(v85,v157 + (2 -1) ,v70));break;end end end elseif ((v88<=(13 + 0)) or ((128 + 204)>1516)) then if ((((5752 -(26 + 234)) -(1342 + 262))>=(5126 -2333)) and (v88<=(16 -6))) then if ((v88==(17 -8)) or ((3908 + 171)<=(8711 -5031))) then v85[v87[1044 -(690 + 352) ]]();else v85[v87[4 -2 ]][v87[7 -4 ]]=v87[787 -(517 + 266) ];end elseif ((v88<=((1 -0) + 10)) or ((189 + 441)>=(3326 -(229 + 239)))) then v85[v87[4 -2 ]][v87[1 + 1 + 1 ]]=v85[v87[1 + 3 ]];elseif (((7458 -(6442 -1295))<=(3918 -(25 + 238))) and (v88>((104 + 1028) -(759 + 361)))) then if (((4453 -(207 + 1121))>(1417 -938)) and (v85[v87[2]]==v87[4 + 0 ])) then v69=v69 + (125 -(111 + 13)) ;else v69=v87[4 -(3 -2) ];end else local v158=0 -(434 -(188 + 246)) ;local v159;local v160;local v161;while true do if ((v158==(1200 -((925 -(200 + 447)) + 921))) or ((1332 -(480 -(7 + 3)))>(7342 -3337))) then v161=nil;while true do if ((v159==(0 -0)) or ((2 + 2)>=(14819 -11046))) then local v182=1204 -(1141 + 63) ;while true do if (((17701 -(13177 -(84 + 11)))>=(5906 -(640 + 1028))) and (v182==(0 + 0 + 0))) then v160=v87[1996 -(198 + 1796) ];v161=v85[v87[821 -(269 + 549) ]];v182=(1326 -(667 + 658)) -0 ;end if (((5387 -(12595 -8306))>(592 + (664 -(547 + 83)))) and (v182==(2 -1))) then v159=1 + 0 ;break;end end end if (((3209 -(182 + (117 -40)))<=(2143 + 1453)) and ((1 + 0)==v159)) then v85[v160 + 1 ]=v161;v85[v160]=v161[v87[939 -(216 + 719) ]];break;end end break;end if ((3851>=(725 -546)) and (v158==(0 + 0 + 0))) then v159=0;v160=nil;v158=(301 + 1689) -(541 + 1170 + 278) ;end end end elseif (((4354 -3153)==(565 + 636)) and (v88<=((36 + 5) -(61 -35)))) then if (((2484 -(667 + 49))==1768) and (v88==(474 -(240 + 220)))) then local v142=(0 -0) -(0 -0) ;local v143;local v144;while true do if (((629 + 572)<=(226 + 2546)) and (v142==(925 -((1693 -(803 + 231)) + 266)))) then v143=652 -(518 + 134) ;v144=nil;v142=1 + 0 ;end if ((v142==(1 -0)) or (((4139 -(427 + 135)) -(406 + 126))<=(714 + 340))) then while true do if (((1357 -(16 + 938))<=((2834 + 3165) -(1325 + 529))) and (v143==(1081 -(201 + 880)))) then v144=v87[438 -(245 + 191) ];v85[v144]=v85[v144]();break;end end break;end end else v69=v87[10 -7 ];end elseif ((v88<=(16 + 0)) or ((4383 -2818)>(693 + 1402))) then v85[v87[1603 -(764 + 837) ]]=v29(v80[v87[3 + 0 ]],nil,v65);elseif ((v88>(1435 -(815 + 603))) or ((2717 -(32 + 66))==(1072 + 2474))) then for v166=v87[2 + (637 -(52 + 585)) ],v87[8 -5 ] do v85[v166]=nil;end else v85[v87[300 -(136 + 162) ]]=v87[1075 -(312 + 760) ];end v69=v69 + (1 -0) ;break;end if ((v91==(0 -0)) or (((2439 -(502 + 469)) + 1394)<=(574 + 808))) then v87=v79[v69];v88=v87[1];v91=1 + 0 ;end end break;end end end end A,B=v27(v11(v73));if  not A[1] then local v92=v63[4][v69] or "?" ;error("Script error at ["   .. v92   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
