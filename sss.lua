do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (4==v18) then function v25()local v31=0 + (0 -0) ;local v32;local v33;local v34;local v35;local v36;local v37;while true do if (v31==3) then if (v36==(1930 -(1889 + 41))) then if (v35==(0 -0)) then return v37 * (0 -0) ;else v36=1 + 0 ;v34=0 + 0 + 0 ;end elseif (v36==((1392 -(247 + 145)) + 1047)) then return ((v35==(701 -(294 + 407))) and (v37 * ((1 + 0)/(1558 -(1425 + 133))))) or (v37 * NaN) ;end return v8(v37,v36-(2091 -1068) ) * (v34 + (v35/((1 + 1)^(82 -30)))) ;end if ((0 -0)==v31) then v32=v24();v33=v24();v31=1 + 0 ;end if (v31==(261 -(102 + 158))) then v34=1 -0 ;v35=(v21(v33,1 + 0 ,20) * ((7 -(5 + 0))^(20 + 10 + 2))) + v32 ;v31=2;end if (v31==(978 -((2025 -1428) + 379))) then v36=v21(v33,1146 -((573 -333) + 885) ,11 + 20 );v37=((v21(v33,131 -(55 + 44) )==(1 + 0 + 0)) and  -(1766 -(1222 + 543))) or (1643 -(1075 + (1153 -586))) ;v31=6 -3 ;end end end v26=nil;function v26(v38)local v39=0 + 0 ;local v40;local v41;while true do if (v39==((834 -408) -(210 + 214))) then v41={};for v90=1 + 0 , #v40 do v41[v90]=v2(v1(v3(v40,v90,v90)));end v39=928 -(805 + 120) ;end if (v39==3) then return v6(v41);end if (v39==(954 -(757 + 196))) then v40=v3(v16,v19,(v19 + v38) -1 );v19=v19 + v38 ;v39=2 -0 ;end if (v39==0) then v40=nil;if  not v38 then local v95=0 + 0 ;while true do if ((675 -(112 + 563))==v95) then v38=v24();if (v38==(204 -(74 + 130))) then return "";end break;end end end v39=1 + (0 -0) ;end end end v18=5;end if (v18==3) then v24=nil;function v24()local v42,v43,v44,v45=v1(v16,v19,v19 + (5 -2) );v19=v19 + (1634 -(412 + 1218)) ;return (v45 * (16777915 -(677 + 22))) + (v44 * (2324 + 25607 + 37605)) + (v43 * (837 -581)) + v42 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v46=0;local v47;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v46==(0 + 0)) then v47=0 + 0 ;v48=nil;v46=1;end if (v46~=(1 + 0)) then else v49=nil;v50=nil;v46=1 + 1 ;end if (v46==3) then v53=nil;while true do local v92=0 -0 ;while true do if (v92==1) then if (v47~=(237 -(85 + 152))) then else local v100=0 + 0 ;while true do if (v100==(1903 -(1584 + 319))) then local v104=0 + 0 ;while true do if (v104==(869 -(472 + 397))) then v48={};v49={};v104=1 + 0 ;end if (v104==1) then v100=1 + 0 ;break;end end end if (v100~=(2 + 0)) then else v47=1 -0 ;break;end if (v100==(2 -1)) then v50={};v51={v48,v49,nil,v50};v100=2;end end end break;end if (v92~=(0 -0)) then else if (v47~=1) then else local v101=0;while true do if (v101==2) then v47=9 -7 ;break;end if (v101~=(794 -(397 + 397))) then else v52=v24();v53={};v101=393 -(64 + 328) ;end if (v101~=1) then else for v109=1,v52 do local v110=1097 -(458 + 639) ;local v111;local v112;while true do if (v110~=(0 -0)) then else local v115=0;while true do if (v115~=(2 -1)) then else v110=1 -0 ;break;end if (v115==(1104 -(715 + 389))) then v111=v22();v112=nil;v115=1 + 0 ;end end end if (v110~=(1 -0)) then else if (v111==(1 -0)) then v112=v22()~=(1175 -(124 + 1051)) ;elseif (v111==2) then v112=v25();elseif (v111==(3 + 0)) then v112=v26();end v53[v109]=v112;break;end end end v51[3]=v22();v101=2;end end end if (v47~=(799 -(684 + 113))) then else local v102=0 -0 ;while true do if ((446 -(136 + 310))~=v102) then else local v106=0 -0 ;while true do if (v106==0) then for v117=1 + 0 ,v24() do local v118=0;local v119;local v120;local v121;while true do if (v118==(1 + 0)) then v121=nil;while true do if (v119==(24 -(5 + 19))) then v120=0 -0 ;v121=nil;v119=1;end if (v119~=(1 + 0)) then else while true do if (v120==(0 + 0)) then v121=v22();if (v21(v121,1,722 -(434 + 287) )==0) then local v179=0 -0 ;local v180;local v181;local v182;local v183;local v184;while true do if (v179==1) then v182=nil;v183=nil;v179=2;end if (v179==0) then v180=0 -0 ;v181=nil;v179=1;end if (v179==2) then v184=nil;while true do if (v180==1) then v183=nil;v184=nil;v180=1 + 1 ;end if (v180==2) then while true do if ((1235 -(1060 + 174))==v181) then local v191=0;while true do if (v191==(0 -0)) then v184={v23(),v23(),nil,nil};if (v182==(0 + 0)) then local v198=0 + 0 ;local v199;while true do if (v198==0) then v199=0;while true do if (v199==(1670 -(1171 + 499))) then v184[3]=v23();v184[4]=v23();break;end end break;end end elseif (v182==(1928 -(571 + 1356))) then v184[124 -(38 + 83) ]=v24();elseif (v182==2) then v184[11 -8 ]=v24() -(2^16) ;elseif (v182==(7 -4)) then local v209=0 + 0 ;local v210;while true do if ((0 + 0)~=v209) then else v210=0 + 0 ;while true do if (v210~=(728 -(375 + 353))) then else v184[2 + 1 ]=v24() -(2^16) ;v184[4 + 0 ]=v23();break;end end break;end end end v191=809 -(278 + 530) ;end if (v191~=(608 -(276 + 331))) then else v181=2;break;end end end if (v181==3) then if (v21(v183,3,2 + 1 )==(609 -(394 + 214))) then v184[4 + 0 ]=v53[v184[11 -7 ]];end v48[v117]=v184;break;end if (v181==2) then local v193=0 -0 ;while true do if (v193~=(781 -(483 + 297))) then else v181=1 + 2 ;break;end if (v193~=(0 + 0)) then else if (v21(v183,1,1)==1) then v184[2]=v53[v184[2]];end if (v21(v183,782 -(253 + 527) ,2)~=(1 -0)) then else v184[3]=v53[v184[3]];end v193=1;end end end if (v181==0) then local v194=0 -0 ;local v195;while true do if (v194==(0 + 0)) then v195=1133 -(1088 + 45) ;while true do if (v195==(1 -0)) then v181=1;break;end if (v195==0) then local v204=0;while true do if (v204~=(0 + 0)) then else v182=v21(v121,5 -3 ,861 -(518 + 340) );v183=v21(v121,4,6);v204=1;end if (v204==1) then v195=1;break;end end end end break;end end end end break;end if (0~=v180) then else local v190=0;while true do if (v190==1) then v180=1;break;end if (v190==(0 -0)) then v181=0 + 0 ;v182=nil;v190=1;end end end end break;end end end break;end end break;end end break;end if (v118==0) then v119=0 -0 ;v120=nil;v118=327 -(98 + 228) ;end end end for v122=1228 -(973 + 254) ,v24() do v49[v122-1 ]=v29();end v106=2 -1 ;end if (v106==(1 -0)) then v102=1;break;end end end if (v102==(1 + 0)) then for v113=1,v24() do v50[v113]=v24();end return v51;end end end v92=1;end end end break;end if (v46~=(217 -(97 + 118))) then else v51=nil;v52=nil;v46=3;end end end v30=nil;v18=7;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v54)if (v1(v54,2)==79) then v20=v0(v3(v54,1,1));return "";else local v72=v2(v0(v54,16));if v20 then local v93=0;local v94;while true do if (v93==1) then return v94;end if (v93==0) then v94=v5(v72,v20);v20=nil;v93=1;end end else return v72;end end end);v18=1;end if (v18==2) then function v22()local v55=v1(v16,v19,v19);v19=v19 + 1 ;return v55;end v23=nil;function v23()local v56,v57=v1(v16,v19,v19 + (3 -1) );v19=v19 + 2 + 0 ;return (v57 * (220 + 36)) + v56 ;end v18=3;end if (v18==7) then function v30(v58,v59,v60)local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v73=v61;local v74=v62;local v75=v63;local v76=v28;local v77={};local v78={};local v79={};for v86=0 + 0 ,v70 do if (((6349 -(5445 -(755 + 908)))<(2490 + 59 + 684)) and (v86>=v75)) then v77[v86-v75 ]=v69[v86 + (1 -0) ];else v79[v86]=v69[v86 + (1747 -(920 + 826)) ];end end local v80=(v70-v75) + 1 + 0 ;local v81;local v82;while true do local v87=0;local v88;while true do if (((1424 -((1892 -(608 + 805)) + 765))<=(30 + 249)) and (v87==(0 + (0 -0)))) then v88=0 + 0 ;while true do if ((v88==(0 + (1235 -(1052 + 183)))) or ((2734 + 187)>(6428 -(1684 + 109)))) then local v103=0 -0 ;while true do if ((v103==(1786 -(1205 + (746 -(9 + 157))))) or ((3639 + (871 -(79 + 463)))>(10661 -6619))) then v88=1 + 0 ;break;end if ((v103==(0 -0)) or ((1581 + 283)>=(2295 + 1473))) then v81=v73[v67];v82=v81[1 + 0 ];v103=(2 + 0) -1 ;end end end if ((v88==1) or ((3343 -(512 + 176))<(1509 -(177 + 932)))) then if ((v82<=(16 -8)) or ((2690 + 220)<=(3317 -1649))) then if ((3033<=(4228 -(65 + 44))) and (v82<=((2 + 12) -(1222 -(769 + 442))))) then if ((v82<=(1 + 0 + 0)) or (((1054 -718) + 2806)>(206 + 3335))) then if ((v82>(0 + (466 -(421 + 45)))) or ((2840 -1108)>=(2262 -((664 -(34 + 260)) + (569 -(100 + 346)))))) then for v149=v81[2],v81[783 -(4 + 15 + 761) ] do v79[v149]=nil;end else v79[v81[2]]();end elseif ((v82>(7 -5)) or ((3146 -(936 + 53))==((14963 -11099) -1993))) then v79[v81[4 -2 ]][v81[12 -9 ]]=v81[3 + 1 ];else local v126=683 -((813 -(333 + 412)) + 615) ;local v127;local v128;while true do if ((v126==(277 -(202 + 74))) or ((1332 + 393 + 222)>(6653 -((873 -622) + 1532)))) then while true do if (((135 + 238 + 1612)<=(4221 -(178 + 264))) and (v127==(0 + 0 + 0))) then v128=v81[891 -(153 + 736) ];v79[v128]=v79[v128](v13(v79,v128 + (1377 -(763 + (1268 -(505 + 150)))) ,v81[(1194 -(232 + 514)) -(123 + 322) ]));break;end end break;end if ((v126==(0 + 0)) or ((4668 -(1353 + 191))==(951 -345))) then v127=1067 -(567 + 500) ;v128=nil;v126=1 + 0 ;end end end elseif ((v82<=5) or (4845==((14852 -10270) -(271 + 1085)))) then if (((18766 -(14755 -(37 + 43)))<(6180 -(1229 + 207))) and (v82==(614 -(125 + 485)))) then local v129=0 -0 ;local v130;local v131;local v132;while true do if ((((979 -(448 + 13)) -(198 + (139 -97)))<=2806) and (v129==1)) then v132=nil;while true do if (((4016 -2880)>(4126 -3269)) and (v130==(1 + 0))) then while true do if ((v131==(368 -(17 + 205 + 146))) or ((3873 -(254 + 1673))<=((362 -147) + (744 -425)))) then v132=v81[5 -(2 + 1) ];v79[v132]=v79[v132]();break;end end break;end if ((v130==0) or ((3751 -(25 + 45))<(6844 -3626))) then v131=0 + 0 ;v132=nil;v130=1 + 0 ;end end break;end if ((v129==(0 + 0 + 0)) or ((7825 -4473)<=(940 + 73 + 121))) then v130=832 -((311 -(7 + 28)) + (1534 -978)) ;v131=nil;v129=1543 -(1037 + 505) ;end end else local v133=0 + 0 ;local v134;local v135;local v136;local v137;local v138;while true do if (((7326 -(5027 -2152))>2192) and (v133==(1 -(820 -(106 + 714))))) then local v160=0 -0 ;while true do if ((v160==(1273 -(197 + 1075))) or ((1032 + 156)>=((793 -327) + 1095 + 270))) then v133=393 -(173 + 218) ;break;end if ((v160==(0 + 0 + (1013 -(586 + 427)))) or ((224 -(1376 -(36 + 1180)))>((4362 + 4348) -5418))) then v136=nil;v137=nil;v160=1;end end end if (((569 + 3785)>=(1787 -653)) and (v133==(815 -(120 + 695)))) then v134=72 -(24 + 48) ;v135=nil;v133=1689 -(856 + 832) ;end if ((v133==(1 + 1)) or ((1507 + 1014)==((3137 -(953 + 509)) + 3290))) then v138=nil;while true do if (((130 + 4183)>=(9780 -6020)) and (v134==(347 -(178 + 167)))) then for v169=v135,v68 do local v170=0 + (22 -(11 + 11)) ;while true do if (((3862 -(206 + 734))>837) and (v170==((1717 -996) -(85 + 636)))) then v138=v138 + ((2207 -(376 + 1591)) -(215 + 24)) ;v79[v169]=v136[v138];break;end end end break;end if ((v134==(1035 -(700 + 335))) or ((5858 -(315 + 1176))<(1231 + 37))) then local v165=(529 -(239 + 290)) + (952 -(704 + 248)) ;local v166;while true do if (((2062 + (1273 -(387 + 235)))<=(4172 + 695)) and (v165==((145 + 66) -(102 + 109)))) then v166=874 -(149 + 238 + 487) ;while true do if ((v166==(1443 -(1134 + 309))) or (((1640 -(603 + 406)) -(541 + 28))>=(2432 -1022))) then v135=v81[4 -2 ];v136,v137=v76(v79[v135](v13(v79,v135 + (117 -(89 + 27)) ,v81[415 -(125 + 287) ])));v166=1 + (773 -(191 + 582)) ;end if (((1 + 0)==v166) or ((2294 -(179 + 69))<=((705 + 2584) -(192 + 1085)))) then v134=2 -1 ;break;end end break;end end end if (((387 + 1578)<((5006 -(878 + 188)) -(1097 + 136))) and (v134==(1 + (1104 -(868 + 236))))) then local v167=666 -(79 + 587) ;local v168;while true do if ((v167==(0 + 0)) or ((2917 + 724)<=(919 -(65 + 83 + 10)))) then v168=0 + 0 ;while true do if (((665 -(42 + 623))==v168) or ((3727 -(585 + 186 + 254))<=((5065 -(449 + 460)) -(99 + 1583)))) then v68=(v137 + v135) -(1 + (280 -(200 + 80))) ;v138=414 -((1407 -(1034 + 216)) + (398 -141)) ;v168=1;end if (((1359 -(75 + 1283))==v168) or ((352 + 653)>=((10456 -6758) + 999))) then v134=(1792 -(768 + 1017)) -(1 + 4) ;break;end end break;end end end end break;end end end elseif (((2753 -(165 + 695))>1881) and (v82<=(1732 -(1156 + 570)))) then v67=v81[(2522 -(308 + 1265)) -((1020 -470) + 229 + 167) ];elseif ((v82==(1077 -(670 + (1868 -(272 + 1196))))) or ((3592 + 507 + 315)<=(672 + (1522 -(212 + 785))))) then local v151=0 -0 ;local v152;local v153;local v154;while true do if ((((8665 -(701 + 715)) -4217)>=(2254 -(628 + 291))) and (v151==((1211 -(949 + 261)) -0))) then v154=nil;while true do if ((v152==(1 + 0)) or ((806 + 514)>=(3453 -1199))) then v79[v153 + (1 -0) ]=v154;v79[v153]=v154[v81[690 -(393 + 38 + 255) ]];break;end if ((v152==(0 + (1611 -(401 + 1210)))) or (((3828 -(124 + 61)) -(264 + 1222 + 4))==((1345 -(186 + 575)) + 3849))) then local v174=0 -0 ;while true do if (((2478 -(88 + 1466))<=(2618 -(95 + 183 + 4))) and (v174==(0 -(0 + 0)))) then v153=v81[1 + 1 ];v154=v79[v81[3]];v174=1 + 0 + 0 ;end if ((v174==(1476 -((478 -155) + 1152))) or ((386 + 280)>=(2964 -1000))) then v152=937 -(685 + 251) ;break;end end end end break;end if (((467 + 1412)>(1561 -1153)) and (v151==(1738 -(1611 + 127)))) then v152=(0 -0) -0 ;v153=nil;v151=2 -1 ;end end elseif (((1556 + 2045)<=(5595 -(1090 + 44))) and (v81[5 -3 ]==v79[v81[3 + 1 ]])) then v67=v67 + 1 + 0 ;else v67=v81[1855 -(303 + 1549) ];end elseif (((188 + 3926)>=(1582 -(622 + 445))) and (v82<=(4 + 9))) then if ((v82<=((2 -1) + 9)) or ((5847 -(805 + 138))<((2074 -(1384 + 396)) + 212))) then if (((3321 -(1014 + 23))==(2179 + 105)) and (v82==(26 -17))) then v79[v81[4 -2 ]]=v79[v81[408 -(310 + 95) ]];else v79[v81[2 + (756 -(560 + 196)) ]]=v30(v74[v81[3 -0 ]],nil,v60);end elseif ((v82<=(1727 -(627 + (2724 -(826 + 809))))) or ((1340 + 1839)<((1780 -(26 + 313)) -(277 + 13)))) then v79[v81[1249 -(785 + 462) ]]=v81[11 -8 ];elseif ((v82>(32 -20)) or ((7155 -4358)<(2422 -1134))) then do return;end else v79[v81[3 -1 ]][v81[517 -(113 + 356 + 45) ]]=v79[v81[10 -6 ]];end elseif (((1156 + 1317)<=(1604 + 2176)) and (v82<=(11 + 4))) then if ((v82==(14 + 0)) or ((3795 -(208 + 830))>(375 + 4080))) then v79[v81[4 -2 ]]={};else v79[v81[(2289 -1646) -(260 + 381) ]]=v60[v81[2 + 1 ]];end elseif ((v82<=(8 + 8)) or ((16202 -11546)<1220)) then v79[v81[4 -2 ]]=v81[3 + (0 -0) ]~=(788 -(113 + 675)) ;elseif ((v82==(123 -(9 + 97))) or ((1853 -655)>1883)) then if (((6121 -((1349 -(75 + 121)) + 237))>=(13 + (1446 -(261 + 741)))) and (v79[v81[1 + 1 ]]==v81[4])) then v67=v67 + (2 -1) ;else v67=v81[2 + (534 -(291 + 242)) ];end else local v157=0 -0 ;local v158;local v159;while true do if ((v157==(1641 -(1497 + (449 -306)))) or ((1685 + 502 + 1045)<=(1167 + 1185))) then while true do if (((571 + 1835)==(3230 -(629 + 195))) and (((4125 -2726) -(340 + 1059))==v158)) then v159=v81[2 + 0 ];v79[v159]=v79[v159](v13(v79,v159 + 1 + 0 + 0 ,v68));break;end end break;end if ((v157==(0 + 0)) or ((6696 -(2765 + 2220))==(52 + 0 + 229))) then v158=0 -0 ;v159=nil;v157=(427 -(161 + 262)) -(5 -2) ;end end end v67=v67 + (1 -0) ;break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v89=v58[4][v67] or "?" ;error("Script error at ["   .. v89   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (1==v18) then v21=nil;function v21(v64,v65,v66)if v66 then local v83=(v64/((3 -1)^(v65-1)))%((1203 -((1911 -(974 + 239)) + 503))^(((v66-(1 + 0 + 0)) -(v65-(1543 -(146 + 1396)))) + (1 -0))) ;return v83-(v83%(1 + 0 + 0)) ;else local v84=0 -0 ;local v85;while true do if (v84==0) then v85=(2 + 0)^(v65-1) ;return (((v64%(v85 + v85))>=v85) and (1 + 0)) or (0 -0) ;end end end end v22=nil;v18=2;end end end vv9(),...);end
