do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==7) then function v30(v31,v32,v33)local v34=v31[1];local v35=v31[2];local v36=v31[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1 ;local function v72()local v73=v34;local v74=v35;local v75=v36;local v76=v28;local v77={};local v78={};local v79={};for v87=0 + 0 ,v71 do if (((975 -(7 + 596))<=(1243 + 1878)) and (v87>=v75)) then v77[v87-v75 ]=v70[v87 + (1 -(0 + 0)) ];else v79[v87]=v70[v87 + (1622 -(337 + 1284)) ];end end local v80=(v71-v75) + (1469 -(918 + 550)) ;local v81;local v82;while true do local v88=0 -0 ;local v89;local v90;while true do if (((493 + 2837)==(4037 -(649 + 58))) and (v88==(1808 -(773 + 1035)))) then v89=0 + 0 ;v90=nil;v88=(1457 -(164 + 1292)) + 0 ;end if ((v88==(95 -(26 + 68))) or ((5155 -(580 + 54))<=(1225 + 433))) then while true do if (((9790 -7262)>=(2392 -(1128 + 325))) and (v89==((1737 -402) -(430 + 905)))) then v90=1157 -(141 + 982 + 34) ;while true do if (((6728 -(1373 + 538))>=(5206 -(1021 + 36))) and (v90==(3 -2))) then if ((v82<=(19 -11)) or (4104<(11907 -8282))) then if ((v82<=(2 + 1)) or ((3206 -(223 + 175))==(3943 -(515 + 507)))) then if ((v82<=(1 + 0)) or ((15484 -10913)==(9932 -4979))) then if ((v82==(0 -0)) or ((1988 -(1393 + 299))>2845)) then local v123=0 + (0 -0) ;local v124;local v125;local v126;local v127;local v128;while true do if (((137 + 60 + 0)<(1790 + 1553)) and ((0 -0)==v123)) then local v158=0 + 0 ;while true do if (((475 + 1250)<3328) and (1==v158)) then v123=1;break;end if ((v158==(1145 -(998 + 147))) or (((7185 -4545) -(12 + 226 + 942))==((5493 -(6 + 14)) -2737))) then v124=0;v125=nil;v158=2 -(1866 -(156 + 1709)) ;end end end if (((2695 -1022)>(226 + 224)) and (v123==1)) then v126=nil;v127=nil;v123=3 -(333 -(73 + 259)) ;end if (((4238 -(57 + 110))>=(3337 + 464)) and (v123==(1945 -(64 + (8913 -7034))))) then v128=nil;while true do if ((v124==(1098 -(520 + 576))) or ((10836 -8529)<=(669 + 117))) then for v176=v125,v69 do local v177=(1029 -(984 + 45)) -0 ;local v178;while true do if (((1788 + 1980)<=(3173 + 849)) and (0==v177)) then v178=0 + 0 ;while true do if (((4428 -(1882 + (939 -(553 + 292))))>=(4668 -3530)) and (v178==0)) then v128=v128 + (187 -(110 + 76)) ;v79[v176]=v126[v128];break;end end break;end end end break;end if (((2975 + 1001)>(2069 -(1041 + 282))) and (v124==(1808 -(134 + 1673)))) then local v169=0 -0 ;while true do if ((v169==1) or (((123 + 3028) -(450 + 95 + 974))==(5198 -(451 + 274 + 168)))) then v124=1 + 1 ;break;end if ((v169==(797 -(239 + 558))) or ((582 + (3520 -1810))==((1357 -(218 + 102)) + 861))) then v69=(v127 + v125) -(2 -1) ;v128=0;v169=1796 -(482 + (2124 -811)) ;end end end if (((1675 -641)<(8660 -5371)) and (v124==(0 + 0))) then local v170=0 -0 ;while true do if (((4918 -1668)<=(21345 -17074)) and (v170==((0 + 0) -0))) then local v184=1030 -(744 + 286) ;while true do if ((((2143 + 3203) -(1043 + 123))<(2624 + 1920)) and ((0 + 0)==v184)) then v125=v81[64 -(17 + 45) ];v126,v127=v76(v79[v125](v13(v79,v125 + (3 -2) ,v81[(11 -7) -1 ])));v184=817 -(421 + 395) ;end if ((v184==(1025 -(253 + 771))) or ((13271 -9052)<(527 + 844))) then v170=3 -(1 + 1) ;break;end end end if (((751 + 719)<(4533 -(589 + 1158))) and (v170==((5 -3) -(1 + 0)))) then v124=1453 -(668 + 784) ;break;end end end end break;end end else local v129=1902 -(1893 + 9) ;local v130;local v131;local v132;while true do if (((465 + (3621 -(441 + 1090)))>(376 + 72)) and (v129==(1264 -(467 + 797)))) then v130=(1503 + 63) -(1539 + 27) ;v131=nil;v129=1 + 0 ;end if (((996 + (11160 -8531))==(2140 + 1485)) and (v129==(996 -(300 + 695)))) then v132=nil;while true do if (((5635 -4219)<((5787 -(683 + 1181)) -(58 + 162))) and (0==v130)) then v131=v81[2];v132=v79[v81[190 -(162 + 25) ]];v130=4 -3 ;end if (((391 -156)<=(4807 -(477 + 631))) and (v130==(1492 -(909 + 582)))) then v79[v131 + ((9 -7) -1) ]=v132;v79[v131]=v132[v81[12 -8 ]];break;end end break;end end end elseif ((v82>(886 -(601 + 283))) or ((5313 -(87 + 648))<=(4527 -(784 + (2406 -1419))))) then v79[v81[6 -4 ]]=v81[2 + 1 ]~=(0 + 0) ;else local v134=0 -(0 + 0) ;local v135;while true do if ((v134==(0 -0)) or ((7094 -2325)<((1850 + 805) -(1335 -(99 + 141))))) then v135=v81[(15 -11) -2 ];v79[v135]=v79[v135](v13(v79,v135 + 1 + 0 ,v69));break;end end end elseif ((v82<=(8 -3)) or ((6836 -4650)<=(3755 -(2605 -(65 + 237))))) then if (((501 + 560)<1206) and (v82==(955 -(264 + 687)))) then if ((v81[4 -2 ]==v79[v81[(5 + 7) -8 ]]) or ((1726 + (1076 -350))>(3993 + 37))) then v68=v68 + (706 -(103 + 602)) ;else v68=v81[5 -2 ];end else v79[v81[7 -5 ]]=v30(v74[v81[3 + 0 ]],nil,v33);end elseif (((259 + 83)==((964 -(376 + 383)) + 137)) and (v82<=(447 -(27 + 414)))) then v79[v81[2 -0 ]][v81[3]]=v79[v81[16 -12 ]];elseif ((((8068 -5886) -(1136 + (2452 -(628 + 962))))<(3105 + 1616)) and (v82>((396 -(103 + 291)) + 5))) then v79[v81[1988 -(1085 + 901) ]][v81[1872 -(622 + 1247) ]]=v81[4];else v68=v81[3 + 0 ];end elseif ((v82<=(24 -11)) or ((46 + 59 + 274)>=((8084 -(1077 + 485)) -3495))) then if ((v82<=10) or ((292 + 300)>=(4277 -(159 + (44 -17))))) then if ((v82==(2 + 7)) or (((7741 -(16 + 233)) -4951)==(5055 -(197 + 1108)))) then if ((v79[v81[8 -6 ]]==v81[8 -4 ]) or ((1018 -(380 + 575))>(5772 -((1771 -1251) + 1238)))) then v68=v68 + (1 -0) ;else v68=v81[6 -3 ];end else v79[v81[1410 -(915 + (1777 -(723 + 561))) ]]=v81[1 + (618 -(404 + 212)) ];end elseif ((v82<=(4 + 7)) or ((11695 -9269)>=(1699 + 938 + 2291))) then v79[v81[916 -(242 + 672) ]]={};elseif (((4532 -(936 + 65))>1327) and (v82>(2 + 10))) then local v151=0 -0 ;local v152;local v153;local v154;while true do if (((98 + 13)<=(860 -(1767 -(852 + 464)))) and (v151==1)) then v154=nil;while true do if (((4651 -2172)>(10015 -7728)) and (v152==(2 -1))) then while true do if (((412 -227)<(2056 -(409 + 264))) and (v153==(0 + (0 -0)))) then v154=v81[400 -(24 + 374) ];v79[v154]=v79[v154]();break;end end break;end if ((4367>=(4408 -1994)) and (v152==(0 + 0))) then v153=0 -0 ;v154=nil;v152=1965 -((1575 -(126 + 1312)) + 1827) ;end end break;end if (((3196 -2366)<3847) and (v151==(0 + 0))) then v152=0 -0 ;v153=nil;v151=1590 -((313 -206) + 1482) ;end end else for v161=v81[259 -(22 + 235) ],v81[826 -(731 + 92) ] do v79[v161]=nil;end end elseif ((((674 + 7341) -5332)>=(4269 -(1448 + 311))) and (v82<=(166 -(125 + 26)))) then if ((v82==(23 -(13 -4))) or ((1524 -(1635 -911))>(4851 + 100))) then do return;end else v79[v81[1 + 1 ]]=v33[v81[1 + 2 ]];end elseif (((16093 -11548)==(11019 -6474)) and (v82<=(908 -((335 -137) + 694)))) then v79[v81[415 -((627 -299) + 85) ]]=v79[v81[1 + 2 ]];elseif ((v82==(5 + 12)) or ((357 + 1270)>(2751 + 1567))) then v79[v81[(1361 -(1098 + 261)) + 0 ]]();else local v155=510 -(216 + 294) ;local v156;local v157;while true do if (((5454 -(281 + (1310 -(58 + 218))))>(125 -77)) and (v155==(0 -0))) then local v167=(0 -0) + 0 ;while true do if (((1663 + 183 + 1799)==(5495 -(404 + 1446))) and (v167==(0 -0))) then v156=0 -0 ;v157=nil;v167=1 + 0 ;end if ((v167==(1 + 0)) or ((3832 -(495 + 512))<=(2127 -(206 + 195)))) then v155=629 -(64 + 564) ;break;end end end if ((((149 + 1468) -(168 + 1026 + 163))<=(870 + 2873)) and (v155==(2 -1))) then while true do if (((2653 -(1037 + 38))>=(1620 -(301 + 669))) and (v156==((3422 -(1459 + 386)) -(773 + 804)))) then v157=v81[1127 -(357 + 768) ];v79[v157]=v79[v157](v13(v79,v157 + (748 -(9 + 738)) ,v81[5 -2 ]));break;end end break;end end end v68=v68 + 1 + 0 ;break;end if ((2089==2089) and (v90==(0 -0))) then local v102=0 + (0 -0) ;while true do if ((v102==(378 -(323 + 54))) or ((5283 -(216 + 166 + (1996 -(583 + 1221))))<(110 + 1299 + 607))) then v90=762 -(641 + 120) ;break;end if ((v102==((1569 -881) -((1909 -(1126 + 99)) + 4))) or ((2001 -719)>(1658 -(206 + 47)))) then v81=v73[v68];v82=v81[3 -2 ];v102=1 + 0 ;end end end end break;end end break;end end end end A,B=v28(v11(v72));if  not A[1] then local v91=0;local v92;while true do if (0==v91) then v92=v31[4][v68] or "?" ;error("Script error at ["   .. v92   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v37)if (v1(v37,2)==79) then v20=v0(v3(v37,1,1));return "";else local v83=v2(v0(v37,16));if v20 then local v93=v5(v83,v20);v20=nil;return v93;else return v83;end end end);v18=1;end if (v18==1) then v21=nil;function v21(v38,v39,v40)if v40 then local v84=0 + 0 ;local v85;while true do if (v84==((0 -0) + 0)) then v85=(v38/((2 + (0 -0))^(v39-(1 + 0))))%((2 + 0)^(((v40-1) -(v39-1)) + 1 + 0)) ;return v85-(v85%(1 -(0 + 0))) ;end end else local v86=(4 -2)^(v39-(1 + 0)) ;return (((v38%(v86 + v86))>=v86) and (1 -0)) or (1669 -(778 + 891)) ;end end v22=nil;v18=2;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (3==v18) then v24=nil;function v24()local v41=0 + 0 ;local v42;local v43;local v44;local v45;while true do if (v41==(1 + 0)) then return (v45 * (16777716 -(177 + 323))) + (v44 * (184517 -118981)) + (v43 * (585 -(134 + 195))) + v42 ;end if (v41==0) then v42,v43,v44,v45=v1(v16,v19,v19 + 2 + 1 );v19=v19 + 3 + 1 + 0 ;v41=1;end end end v25=nil;v18=4;end if (v18==4) then function v25()local v46=v24();local v47=v24();local v48=(4 -3) + 0 ;local v49=(v21(v47,235 -(130 + 104) ,72 -52 ) * ((7 -5)^(74 -42))) + v46 ;local v50=v21(v47,1822 -(1379 + 422) ,31);local v51=((v21(v47,890 -(428 + 430) )==(1 + 0)) and  -(1 + 0)) or ((1822 -(83 + 20)) -(377 + (2502 -(471 + 690)))) ;if (v50==(0 -0)) then if (v49==(0 + 0)) then return v51 * (1682 -(943 + 739)) ;else v50=1800 -(1143 + 656) ;v48=0 -0 ;end elseif (v50==(2792 -((564 -(88 + 71)) + 340))) then return ((v49==((0 -0) -0)) and (v51 * ((3 -2)/(0 -0)))) or (v51 * NaN) ;end return v8(v51,v50-(104 + 919) ) * (v48 + (v49/((1 + 1 + 0)^52))) ;end v26=nil;function v26(v52)local v53=0 + 0 ;local v54;local v55;while true do if (v53==(3 + (886 -(724 + 162)))) then return v6(v55);end if ((4 -2)==v53) then v55={};for v94=1 + 0 , #v54 do v55[v94]=v2(v1(v3(v54,v94,v94)));end v53=13 -10 ;end if (v53==(1 + 0)) then v54=v3(v16,v19,(v19 + v52) -(1 + 0) );v19=v19 + v52 ;v53=1 + 1 ;end if (v53==0) then v54=nil;if  not v52 then v52=v24();if (v52==0) then return "";end end v53=3 -2 ;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v56=339 -(22 + 317) ;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v56~=(939 -(140 + 799))) then else v57=0 + 0 ;v58=nil;v56=1803 -(690 + 1112) ;end if (v56==2) then v61=nil;v62=nil;v56=3;end if (v56==3) then v63=nil;while true do local v96=406 -(198 + 208) ;local v97;while true do if (v96==0) then v97=0;while true do if (v97~=(3 -2)) then else if (2==v57) then local v103=0 -0 ;while true do if (0==v103) then for v109=1,v24() do local v110=0 -0 ;local v111;local v112;while true do if (v110~=(600 -(46 + 554))) then else v111=0 + 0 ;v112=nil;v110=1 -0 ;end if (v110==(1 + 0)) then while true do if ((0 -0)~=v111) then else v112=v22();if (v21(v112,1 -0 ,1317 -(1048 + 268) )~=(0 + 0)) then else local v163=0 + 0 ;local v164;local v165;local v166;while true do if (v163==(2 + 1)) then if (v21(v165,14 -11 ,8 -5 )==(1 + 0)) then v166[4]=v63[v166[1559 -(1027 + 528) ]];end v58[v109]=v166;break;end if (v163==(1 -0)) then v166={v23(),v23(),nil,nil};if (v164==(0 -0)) then local v187=0 -0 ;local v188;local v189;while true do if (v187==(0 -0)) then v188=0;v189=nil;v187=2 -1 ;end if (v187~=1) then else while true do if ((0 -0)==v188) then v189=0 -0 ;while true do if (v189==0) then v166[1910 -(1034 + 873) ]=v23();v166[4]=v23();break;end end break;end end break;end end elseif (v164==(1 + 0)) then v166[7 -4 ]=v24();elseif (v164==(2 + 0)) then v166[3]=v24() -((2 + 0)^(3 + 13)) ;elseif (v164==(318 -(60 + 255))) then local v198=0;local v199;while true do if (v198~=0) then else v199=0;while true do if (0==v199) then v166[3]=v24() -((4 -2)^(39 -23)) ;v166[4]=v23();break;end end break;end end end v163=2;end if (2==v163) then local v180=0 + 0 ;local v181;while true do if (v180==0) then v181=0;while true do if ((1 + 0)~=v181) then else v163=2 + 1 ;break;end if (v181==0) then local v197=12 -(8 + 4) ;while true do if (v197==(0 -0)) then if (v21(v165,1 -0 ,677 -(43 + 633) )~=(1 + 0)) then else v166[2]=v63[v166[2 -0 ]];end if (v21(v165,2,1 + 1 )~=(1 + 0)) then else v166[1 + 2 ]=v63[v166[325 -(224 + 98) ]];end v197=2 -1 ;end if (v197~=(1 + 0)) then else v181=1;break;end end end end break;end end end if (v163==0) then v164=v21(v112,2 + 0 ,3);v165=v21(v112,965 -(926 + 35) ,7 -1 );v163=1 + 0 ;end end end break;end end break;end end end for v113=930 -(341 + 588) ,v24() do v59[v113-(1501 -(643 + 857)) ]=v29();end v103=1 -0 ;end if (v103==(1 + 0)) then for v115=219 -(198 + 20) ,v24() do v60[v115]=v24();end return v61;end end end break;end if (v97~=(1297 -(1121 + 176))) then else if ((0 + 0)~=v57) then else local v104=170 -(116 + 54) ;while true do if (v104==0) then v58={};v59={};v104=827 -(670 + 156) ;end if (v104==(650 -(510 + 139))) then v60={};v61={v58,v59,nil,v60};v104=6 -4 ;end if (v104==(3 -1)) then v57=395 -(348 + 46) ;break;end end end if (v57==(568 -(94 + 473))) then local v105=0 + 0 ;local v106;while true do if (v105==(885 -(582 + 303))) then v106=605 -(582 + 23) ;while true do if (v106==(7 -5)) then v57=2 + 0 ;break;end if (v106~=1) then else for v118=3 -2 ,v62 do local v119=0;local v120;local v121;local v122;while true do if (v119~=1) then else v122=nil;while true do if (v120==(0 -0)) then v121=v22();v122=nil;v120=2 -1 ;end if (v120==(3 -2)) then if (v121==1) then v122=v22()~=(0 + 0) ;elseif (v121==(910 -(193 + 715))) then v122=v25();elseif (v121==(1 + 2)) then v122=v26();end v63[v118]=v122;break;end end break;end if (v119==(0 + 0)) then v120=0 + 0 ;v121=nil;v119=1 -0 ;end end end v61[1764 -(825 + 936) ]=v22();v106=5 -3 ;end if (v106~=0) then else v62=v24();v63={};v106=2000 -(478 + 1521) ;end end break;end end end v97=1 -0 ;end end break;end end end break;end if (v56~=(1 -0)) then else v59=nil;v60=nil;v56=2;end end end v30=nil;v18=7;end if (2==v18) then function v22()local v64=(0 -0) + 0 ;local v65;while true do if (v64==0) then v65=v1(v16,v19,v19);v19=v19 + (491 -((686 -(119 + 436)) + 359)) ;v64=441 -(413 + 27) ;end if (v64==(1 + 0)) then return v65;end end end v23=nil;function v23()local v66,v67=v1(v16,v19,v19 + 1 + 1 );v19=v19 + (4 -2) ;return (v67 * 256) + v66 ;end v18=3;end end end vv9(),...);end
