do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v31==0) then v32=259 -(103 + 156) ;v33=nil;v31=1 -0 ;end if (v31==1) then v34=nil;v35=nil;v31=2;end if (v31==2) then v36=nil;v37=nil;v31=3;end if (4==v31) then while true do if (v32==3) then v39=nil;while true do local v105=0;local v106;local v107;while true do if (v105~=1) then else while true do if (v106~=0) then else v107=0 -0 ;while true do if (v107==0) then local v111=0;local v112;while true do if (v111==0) then v112=0;while true do if (v112==1) then v107=1;break;end if (v112==(862 -(506 + 356))) then local v158=0 -0 ;while true do if (0~=v158) then else if (v33==1) then local v174=1062 -(834 + 228) ;local v175;while true do if ((0 -0)==v174) then v175=0 -0 ;while true do if (v175~=(1929 -(1902 + 25))) then else v33=2;break;end if (v175==1) then local v188=0;while true do if (v188~=(1 + 0)) then else v175=2;break;end if (v188~=(211 -(155 + 56))) then else for v194=1,v38 do local v195=0;local v196;local v197;local v198;local v199;while true do if (v195==1) then v198=nil;v199=nil;v195=4 -2 ;end if (v195==0) then local v207=0 + 0 ;while true do if ((1 + 0)~=v207) then else v195=1 + 0 ;break;end if ((721 -(183 + 538))==v207) then v196=0 + 0 ;v197=nil;v207=1 + 0 ;end end end if (v195==2) then while true do if (v196==(702 -(385 + 317))) then local v212=0;while true do if (v212==1) then v196=1269 -(715 + 553) ;break;end if (v212~=(705 -(256 + 449))) then else v197=0;v198=nil;v212=1;end end end if (v196~=1) then else v199=nil;while true do if (v197~=(2 -1)) then else if (v198==1) then v199=v22()~=(0 + 0) ;elseif (v198==2) then v199=v25();elseif (v198==(8 -5)) then v199=v26();end v39[v194]=v199;break;end if (v197~=(0 + 0)) then else local v218=0;local v219;while true do if (v218==(1537 -(1004 + 533))) then v219=0;while true do if (v219~=(1323 -(999 + 323))) then else v197=403 -(350 + 52) ;break;end if (v219==0) then local v229=0;local v230;while true do if ((301 -(11 + 290))==v229) then v230=1056 -(1019 + 37) ;while true do if (v230~=1) then else v219=391 -(130 + 260) ;break;end if (v230==(0 + 0)) then local v236=0 -0 ;while true do if (v236==0) then v198=v22();v199=nil;v236=1;end if (1==v236) then v230=1;break;end end end end break;end end end end break;end end end end break;end end break;end end end v37[1 + 2 ]=v22();v188=1;end end end if (v175~=0) then else local v189=0;while true do if (v189==1) then v175=1235 -(453 + 781) ;break;end if (v189==(0 -0)) then local v193=0;while true do if (v193~=0) then else v38=v24();v39={};v193=1 + 0 ;end if (1==v193) then v189=1 -0 ;break;end end end end end end break;end end end if (v33~=2) then else local v176=0;local v177;while true do if ((0 -0)~=v176) then else v177=0 -0 ;while true do if (v177==(0 -0)) then local v190=0 -0 ;while true do if (0==v190) then for v200=1,v24() do local v201=0 -0 ;local v202;while true do if (0==v201) then v202=v22();if (v21(v202,1 + 0 ,1)==(205 -(11 + 194))) then local v208=0 + 0 ;local v209;local v210;local v211;while true do if (v208==(9 -6)) then if (v21(v210,1847 -(1371 + 473) ,3)==1) then v211[10 -6 ]=v39[v211[4]];end v34[v200]=v211;break;end if (v208==1) then local v214=0;while true do if (1~=v214) then else v208=5 -3 ;break;end if (v214~=(0 -0)) then else v211={v23(),v23(),nil,nil};if (v209==(49 -(17 + 32))) then local v226=0 + 0 ;local v227;local v228;while true do if (0==v226) then v227=0 + 0 ;v228=nil;v226=1;end if (v226==(787 -(331 + 455))) then while true do if (v227==0) then v228=0 -0 ;while true do if ((1080 -(834 + 246))~=v228) then else v211[7 -4 ]=v23();v211[213 -(147 + 62) ]=v23();break;end end break;end end break;end end elseif (v209==1) then v211[3]=v24();elseif (v209==(8 -6)) then v211[1617 -(482 + 1132) ]=v24() -(2^(15 + 1)) ;elseif (v209~=(3 + 0)) then else local v233=0;local v234;local v235;while true do if (v233==(0 -0)) then local v239=0;while true do if (v239==0) then v234=0;v235=nil;v239=2 -1 ;end if (v239~=(779 -(263 + 515))) then else v233=1 -0 ;break;end end end if (v233~=(578 -(73 + 504))) then else while true do if (v234==(0 + 0)) then v235=0;while true do if (v235~=(0 -0)) then else v211[3]=v24() -(2^(54 -38)) ;v211[4]=v23();break;end end break;end end break;end end end v214=1 -0 ;end end end if (v208==(1775 -(1411 + 364))) then local v215=0;local v216;while true do if ((453 -(70 + 383))==v215) then v216=0;while true do if (v216~=0) then else v209=v21(v202,2 + 0 ,8 -5 );v210=v21(v202,1743 -(293 + 1446) ,6 + 0 );v216=1;end if (v216==1) then v208=1;break;end end break;end end end if (v208==2) then if (v21(v210,3 -2 ,1 + 0 )==1) then v211[8 -6 ]=v39[v211[2]];end if (v21(v210,2,1 + 1 )==1) then v211[5 -2 ]=v39[v211[3]];end v208=3;end end end break;end end end for v203=252 -(113 + 138) ,v24() do v35[v203-(1 -0) ]=v29();end v190=2 -1 ;end if (v190~=(317 -(125 + 191))) then else v177=1;break;end end end if (v177==1) then local v191=0 + 0 ;while true do if (v191~=0) then else for v205=2 -1 ,v24() do v36[v205]=v24();end return v37;end end end end break;end end end v158=1 + 0 ;end if (v158==(4 -3)) then v112=1;break;end end end end break;end end end if ((1848 -(1093 + 754))==v107) then if (v33==0) then local v134=0;local v135;local v136;while true do if (v134==0) then v135=0 -0 ;v136=nil;v134=1;end if (v134==(1 + 0)) then while true do if (0~=v135) then else v136=0;while true do if (v136~=(226 -(86 + 139))) then else local v178=0;while true do if ((1474 -(1317 + 157))==v178) then v36={};v37={v34,v35,nil,v36};v178=1 + 0 ;end if (1~=v178) then else v136=2;break;end end end if (v136==2) then v33=1;break;end if (v136==(0 -0)) then v34={};v35={};v136=1;end end break;end end break;end end end break;end end break;end end break;end if (v105~=(0 -0)) then else v106=1895 -(1616 + 279) ;v107=nil;v105=644 -(438 + 205) ;end end end break;end if (v32==(1753 -(816 + 936))) then local v101=0 + 0 ;while true do if (v101~=0) then else v35=nil;v36=nil;v101=1;end if (v101~=(303 -(16 + 286))) then else v32=2;break;end end end if (v32~=(1028 -(525 + 503))) then else local v102=0;while true do if (v102==0) then v33=0 + 0 ;v34=nil;v102=1 + 0 ;end if (v102==(1 + 0)) then v32=776 -(615 + 160) ;break;end end end if (v32==2) then local v103=805 -(554 + 251) ;local v104;while true do if (v103==0) then v104=0 -0 ;while true do if (v104==(1 + 0)) then v32=6 -3 ;break;end if ((851 -(757 + 94))==v104) then local v110=0 -0 ;while true do if (v110~=1) then else v104=1;break;end if (v110==(685 -(391 + 294))) then v37=nil;v38=nil;v110=1 + 0 ;end end end end break;end end end end break;end if ((869 -(206 + 660))==v31) then v38=nil;v39=nil;v31=2 + 2 ;end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v40)if (v1(v40,2)==79) then local v74=0;while true do if (0==v74) then v20=v0(v3(v40,1,1));return "";end end else local v75=v2(v0(v40,16));if v20 then local v94=v5(v75,v20);v20=nil;return v94;else return v75;end end end);v18=1;end if (v18==2) then function v22()local v41=v1(v16,v19,v19);v19=v19 + 1 ;return v41;end v23=nil;function v23()local v42=0 -0 ;local v43;local v44;while true do if (v42==(1 + 0 + 0)) then return (v44 * (255 + 1)) + v43 ;end if (v42==(0 -0)) then v43,v44=v1(v16,v19,v19 + 2 + 0 );v19=v19 + ((659 -(326 + 97)) -(7 + 227)) ;v42=1;end end end v18=3;end if (v18==1) then v21=nil;function v21(v45,v46,v47)if v47 then local v76=0 + 0 ;local v77;while true do if (v76==(0 + 0)) then v77=(v45/((976 -(636 + 338))^(v46-(1 + 0))))%(((33 -26) -5)^(((v47-1) -(v46-(343 -(305 + 37)))) + 1 + 0)) ;return v77-(v77%(44 -(40 + 3))) ;end end else local v78=672 -(450 + 222) ;local v79;while true do if (v78==(1138 -(177 + 961))) then v79=(2 + 0)^(v46-(432 -(55 + 90 + 122 + 164))) ;return (((v45%(v79 + v79))>=v79) and (1 + 0)) or (205 -(175 + 30)) ;end end end end v22=nil;v18=2;end if (v18==7) then function v30(v48,v49,v50)local v51=v48[1];local v52=v48[2];local v53=v48[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v80=v51;local v81=v52;local v82=v53;local v83=v28;local v84={};local v85={};local v86={};for v90=0 -(0 + 0) ,v72 do if (((620 + 2185 + 215)>=(7990 -5797)) and (v90>=v82)) then v84[v90-v82 ]=v71[v90 + (1 -0) ];else v86[v90]=v71[v90 + 1 + 0 ];end end local v87=(v72-v82) + (280 -(238 + 41)) ;local v88;local v89;while true do local v91=1340 -(210 + 1130) ;local v92;while true do if ((v91==0) or ((4790 -(963 + 937))==((4192 -(1031 + 564)) + 47))) then v92=986 -(715 + 271) ;while true do if (((402 + 1249)>(2302 -(1039 + 354))) and (v92==(3 -2))) then if (((4870 -(764 + 594 + 538))>=(2065 -478)) and (v89<=8)) then if ((3550>(449 + 890)) and (v89<=(1903 -(1846 + 54)))) then if ((v89<=1) or ((869 + 2056)<(3475 -(1098 + 233 + 517)))) then if ((v89>(1005 -(383 + 622))) or (2993<=(3119 -(775 + 1038)))) then do return;end else v86[v88[2]][v88[2 + 1 ]]=v86[v88[8 -(1504 -(1320 + 180)) ]];end elseif (((1120 + 1495)<(352 + 2469)) and (v89==(1 + 1))) then local v115=0;local v116;local v117;local v118;while true do if ((v115==(492 -(356 + 136))) or (3229==(6484 -3472))) then v116=1460 -(416 + 1044) ;v117=nil;v115=1;end if (((7009 -5143)<=(686 + 1225)) and (v115==(3 -2))) then v118=nil;while true do if ((v116==(810 -(241 + 569))) or ((16954 -11968)==10)) then v117=261 -(82 + 179) ;v118=nil;v116=1;end if ((v116==(3 -(1750 -(775 + 973)))) or ((5684 -3675)==4488)) then while true do if ((v117==(0 -0)) or ((9819 -4966)<(10635 -(31765 -24381)))) then v118=v88[2];v86[v118]=v86[v118]();break;end end break;end end break;end end else local v119=0;local v120;local v121;local v122;local v123;local v124;while true do if ((v119==(0 + 0)) or ((2550 -(1407 + 21))==((8229 -6059) -(3981 -2569)))) then local v153=0 + 0 ;while true do if ((v153==1) or ((2180 -(770 + 224))>2807)) then v119=1 + 0 ;break;end if ((v153==(0 -0)) or ((1718 -940)>(5767 -3734))) then v120=0 -0 ;v121=nil;v153=1 + 0 ;end end end if (((824 -(468 + 355))==v119) or ((4316 -(767 + 599))<=(1085 + 1669))) then local v154=0 -0 ;while true do if ((v154==(517 -(41 + 476))) or (58>(1669 + 1009))) then v122=nil;v123=nil;v154=606 -(573 + 32) ;end if ((v154==(730 -(642 + 87))) or (4037<(1205 + 1834))) then v119=9 -7 ;break;end end end if ((v119==2) or ((819 -273)==(124 + 186))) then v124=nil;while true do if ((v120==2) or ((15553 -10659)==(7877 -4083))) then for v164=v121,v70 do local v165=445 -(409 + 36) ;local v166;while true do if ((0==v165) or ((3769 -(9 + 401))<(1889 -(389 + 789)))) then v166=0 -0 ;while true do if (((16677 -12889)<(1045 + 3616)) and (0==v166)) then v124=v124 + (4 -3) ;v86[v164]=v122[v124];break;end end break;end end end break;end if ((v120==(2 -1)) or ((66 + 1148)>=(670 + 612))) then local v160=(1246 -(772 + 474)) + 0 ;local v161;while true do if ((v160==((235 + 42) -(144 + 133))) or (1699>(1407 + 1311))) then v161=1042 -(87 + 955) ;while true do if ((v161==0) or ((230 + 4198)<(59 + 26))) then local v182=(3446 -(1530 + 44)) -(273 + 63 + 1536) ;while true do if ((1387==(3108 -1721)) and (v182==(264 -(128 + 136)))) then v70=(v123 + v121) -(1752 -(895 + 856)) ;v124=0;v182=(1038 -(44 + 993)) + 0 ;end if ((v182==(265 -((505 -(70 + 374)) + 203))) or ((477 -(29 + 52))>(8297 -6244))) then v161=417 -(97 + 319) ;break;end end end if (((262 + 356)==(1454 -(795 + 41))) and (v161==1)) then v120=2;break;end end break;end end end if (((2753 + 1263 + 65)==(5291 -(258 + 952))) and (v120==(0 + 0))) then local v162=0 -0 ;local v163;while true do if (((887 + 1118)<(14476 -(7941 + 2095))) and (v162==0)) then v163=0;while true do if (((10014 -(4453 + 1337))>=(995 + 1477)) and (v163==0)) then v121=v88[2];v122,v123=v83(v86[v121](v13(v86,v121 + 1 + 0 ,v88[3])));v163=4 -3 ;end if ((v163==(1519 -(991 + 527))) or ((931 + 1141)>(4380 -(478 + 1102)))) then v120=1;break;end end break;end end end end break;end end end elseif ((v89<=(5 + (1022 -(997 + 25)))) or ((3364 -(766 + 71))<=(3508 -2351))) then if ((v89==4) or ((719 -(17 + 54))<(1084 -(11 + 138 + 478)))) then v86[v88[1 + 1 ]]=v88[5 -2 ];else local v127=1705 -(1464 + 241) ;local v128;while true do if (((2874 -(1613 + 3))<=((13751 -(27 + 1546)) -7536)) and (v127==(0 + 0))) then v128=v88[782 -(97 + 683) ];v86[v128]=v86[v128](v13(v86,v128 + 1 + 0 ,v70));break;end end end elseif (((10734 -6391)>1654) and (v89<=((2780 -(257 + 1072)) -(1071 + 374)))) then if ((v88[2 + 0 ]==v86[v88[4]]) or ((11542 -8700)==(907 -(133 + 25)))) then v69=v69 + (2 -1) ;else v69=v88[1671 -(1149 + 519) ];end elseif ((v89>((1876 -(1014 + 860)) + 5)) or (((4751 -(303 + 47)) + 163 + 25)==3389)) then if ((v86[v88[1046 -(198 + 846) ]]==v88[1576 -(451 + 1121) ]) or ((1498 -1043)>=(1835 -((1919 -(1271 + 590)) + 270)))) then v69=v69 + 1 + 0 ;else v69=v88[1337 -(606 + 728) ];end else local v140=0 + 0 ;local v141;local v142;local v143;while true do if ((v140==(0 + 0)) or ((414 + 1820)==((5379 -2522) + 811))) then v141=0 -0 ;v142=nil;v140=2 -1 ;end if (((3021 -1802)<=((12624 -(402 + 126)) -8512)) and (v140==1)) then v143=nil;while true do if ((3626>=(1275 -(252 + (2297 -(1018 + 544))))) and (v141==(0 -0))) then local v167=1264 -(501 + 763) ;while true do if ((v167==(1755 -(876 + 879))) or ((2417 + 293)>=(5610 -(303 + 804)))) then v142=(0 -0) + 0 ;v143=nil;v167=1 -0 ;end if (((2491 -(1374 + 300))>=290) and (v167==(1 + 0))) then v141=1 + 0 ;break;end end end if (((3581 -(682 + 905))<(3781 -(1037 + 338))) and (v141==((1623 -(225 + 1397)) + 0))) then while true do if (((82 + 238)<2514) and (v142==(0 -0))) then v143=v88[(1140 -(1082 + 53)) -3 ];v86[v143]=v86[v143](v13(v86,v143 + 1 + 0 ,v88[7 -4 ]));break;end end break;end end break;end end end elseif (((5224 -3912)<3495) and (v89<=13)) then if ((3969>=(525 + 1034)) and (v89<=(15 -5))) then if (((1000 + 2012)<(4499 -(45 + 472))) and (v89>(1414 -((2685 -(135 + 1167)) + 22)))) then v86[v88[2]]=v50[v88[2 + 1 ]];else for v137=v88[6 -4 ],v88[10 -7 ] do v86[v137]=nil;end end elseif ((v89<=(325 -(170 + 144))) or ((3652 -(561 + 600))==(671 + 1723))) then v86[v88[7 -5 ]]=v30(v81[v88[1385 -(960 + 422) ]],nil,v50);elseif (((10313 -7327)==(6297 -3311)) and (v89==(1425 -(541 + 872)))) then local v144=0;local v145;local v146;local v147;while true do if ((v144==1) or (716<=299)) then v147=nil;while true do if ((v145==(1 + 0)) or ((69 -(1246 -(277 + 930)))>(10533 -5623))) then v86[v146 + (152 -(4 + 147)) ]=v147;v86[v146]=v147[v88[954 -(572 + (1786 -(265 + 1143))) ]];break;end if (((3058 -(132 + 297))<=(2830 + 1612)) and (v145==(0 + 0))) then local v171=0;while true do if (((891 + 3693)>(3041 -(62 + 1083 + (2531 -1722)))) and (v171==((5 -1) -3))) then v145=1;break;end if (((0 -0)==v171) or ((426 + 2803)<(1995 -(448 + 332)))) then local v181=506 -((1318 -875) + 63) ;while true do if (((11982 -8361)<(13487 -9317)) and (v181==(1 + 0))) then v171=2 -1 ;break;end if ((v181==(0 + 0)) or ((11171 -8483)<=(2689 -(780 + 83)))) then v146=v88[(3 + 0) -1 ];v147=v86[v88[1 + 2 ]];v181=1;end end end end end end break;end if (((630 -(221 + 205))==(271 -67)) and (v144==(508 -(341 + 167)))) then local v159=0 + (0 -0) ;while true do if (((1940 -(85 + 487))<(4627 -(262 + 0 + 200))) and (v159==(1022 -(115 + 907)))) then v145=910 -(679 + 231) ;v146=nil;v159=(1 + 0) -0 ;end if (((9223 -5571)>((405 + 27) -(24 + 8))) and (v159==(3 -2))) then v144=459 -(259 + 199) ;break;end end end end else v86[v88[2]]=v86[v88[3 + 0 ]];end elseif (((119 + 3 + 1905)>(440 -144)) and (v89<=(7 + 8))) then if ((v89>14) or ((4573 -(617 + 54 + 188))<(2398 + 80 + 2))) then v86[v88[543 -(125 + 416) ]]={};else v86[v88[(3 + 0) -1 ]]();end elseif ((v89<=(1690 -(652 + 1022))) or ((3726 -(508 + 13))==(1433 -(346 + 389)))) then v69=v88[3];elseif ((v89>17) or (408>=(2215 -(592 + 796)))) then v86[v88[5 -3 ]]=v88[1 + (1020 -(338 + 680)) ]~=(0 + 0) ;else v86[v88[2 + 0 ]][v88[3 + 0 ]]=v88[8 -(2 + 2) ];end v69=v69 + (1 -0) ;break;end if ((v92==(0 + 0)) or (2512>=4114)) then v88=v80[v69];v89=v88[1 + 0 ];v92=1;end end break;end end end end A,B=v28(v11(v73));if  not A[1] then local v93=v48[4][v69] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==4) then function v25()local v54=v24();local v55=v24();local v56=3 -2 ;local v57=(v21(v55,(1448 -(644 + 803)) -(0 -0) ,81 -(998 -(386 + 551)) ) * ((5 -3)^((321 -(61 + 247)) + (1756 -(101 + 1636))))) + v54 ;local v58=v21(v55,37 -16 ,953 -(839 + 83) );local v59=((v21(v55,10 + 22 )==(616 -(449 + 166))) and  -(3 -2)) or (1 -0) ;if (v58==(1335 -(452 + 883))) then if (v57==0) then return v59 * 0 ;else v58=1 -0 ;v56=1041 -(800 + 241) ;end elseif (v58==(8325 -6278)) then return ((v57==(0 + 0)) and (v59 * ((1 -0)/(0 -0)))) or (v59 * NaN) ;end return v8(v59,v58-(323 + (1806 -(307 + 799))) ) * (v56 + (v57/(2^(1363 -(947 + 364))))) ;end v26=nil;function v26(v60)local v61=0 -0 ;local v62;local v63;while true do if (v61==(1749 -(1504 + 245))) then v62=nil;if  not v60 then v60=v24();if (v60==(626 -((958 -(185 + 302)) + 155))) then return "";end end v61=1 -0 ;end if (v61==(1 + 0)) then v62=v3(v16,v19,(v19 + v60) -1 );v19=v19 + v60 ;v61=289 -(220 + 67) ;end if (v61==((4 + 4) -6)) then v63={};for v95=1 -0 , #v62 do v63[v95]=v2(v1(v3(v62,v95,v95)));end v61=3 + 0 ;end if (v61==((259 + 1379) -(557 + 1078))) then return v6(v63);end end end v18=5;end if (v18==3) then v24=nil;function v24()local v64=0 + 0 ;local v65;local v66;local v67;local v68;while true do if (v64==(0 -(529 -(487 + 42)))) then v65,v66,v67,v68=v1(v16,v19,v19 + 3 + (124 -(117 + 7)) );v19=v19 + (5 -1) ;v64=1740 -(425 + 1314) ;end if (v64==(2 -1)) then return (v68 * ((163803880 -102310112) -(1353789 + 43362763))) + (v67 * (66488 -(556 + 396))) + (v66 * (410 -154)) + v65 ;end end end v25=nil;v18=4;end end end vv9(),...);end
