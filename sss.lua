do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v76=0;local v77;while true do if (v76==0) then v77=v2(v0(v30,16));if v19 then local v96=0;local v97;while true do if (0==v96) then v97=v5(v77,v19);v19=nil;v96=1;end if (v96==1) then return v97;end end else return v77;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v78=(v31/(2^(v32-(1342 -(1102 + 239)))))%(2^(((v33-((1249 -934) -(133 + 181))) -(v32-((1538 -(125 + 88)) -(919 + 405)))) + (1 -0))) ;return v78-(v78%(181 -(105 + 75))) ;else local v79=((4 -2) -0)^(v32-((2 -1) + 0 + 0)) ;return (((v31%(v79 + v79))>=v79) and (2 -1)) or (1043 -(884 + 159)) ;end end local function v21()local v34=845 -(574 + 271) ;local v35;while true do if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + ((6192 -4733) -(613 + 845)) ;v34=1512 -(922 + 589) ;end if (v34==(1 + 0)) then return v35;end end end local function v22()local v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + 2 + 0 ;return (v37 * (205 + 51)) + v36 ;end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (8 -4) ;return (v41 * 16777216) + (v40 * (203662 -138126)) + (v39 * (232 + 24)) + v38 ;end local function v24()local v42=(7063 -5186) -(32 + 1845) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(470 -(131 + 338))) then v45=1 -0 ;v46=(v20(v44,1,(241 -160) -61 ) * (2^(9 + 23))) + v43 ;v42=574 -(40 + 532) ;end if (v42==(0 + 0)) then v43=v23();v44=v23();v42=1;end if (v42==(3 + 0)) then if (v47==(1803 -(97 + 1706))) then if (v46==(0 + 0)) then return v48 * ((411 -(86 + 325)) -0) ;else local v98=1889 -(1854 + 35) ;while true do if (v98==(1097 -(501 + 596))) then v47=1 + 0 ;v45=0 + 0 ;break;end end end elseif (v47==(3048 -1001)) then return ((v46==(1362 -((161 -101) + 795 + 507))) and (v48 * (1/(75 -(22 + 53))))) or (v48 * NaN) ;end return v8(v48,v47-(1350 -(7 + 75 + 245)) ) * (v45 + (v46/((1 + 1)^((179 -(82 + 17)) -28)))) ;end if (v42==2) then v47=v20(v44,189 -(37 + 131) ,31);v48=((v20(v44,74 -42 )==(1045 -(183 + (1273 -(81 + 331))))) and  -1) or ((999 -(193 + 41)) -(84 + 680)) ;v42=11 -(711 -(182 + 521)) ;end end end local function v25(v49)local v50;if  not v49 then local v80=1506 -(1354 + 152) ;while true do if (v80==0) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 -(829 -(452 + 377))) );v18=v18 + v49 ;local v51={};for v68=1, #v50 do v51[v68]=v2(v1(v3(v50,v68,v68)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v52~=3) then else v59=nil;v60=nil;v52=1593 -(1332 + 257) ;end if ((1305 -(381 + 923))~=v52) then else v55=nil;v56=nil;v52=6 -4 ;end if (v52~=(0 + 0)) then else v53=0 -0 ;v54=nil;v52=1324 -(416 + 907) ;end if (4==v52) then v61=nil;while true do if ((2 + 0)~=v53) then else v58=nil;v59=nil;v53=3 + 0 ;end if (v53==(2 + 2)) then while true do if (v54==3) then v61=nil;while true do local v106=0;while true do if (v106~=(0 + 0)) then else local v108=0;local v109;while true do if (v108==(0 -0)) then v109=0;while true do if (v109==(0 + 0)) then local v115=78 -(73 + 5) ;while true do if (v115~=(1828 -(1626 + 201))) then else v109=1;break;end if (0~=v115) then else if ((1 + 0)==v55) then local v158=0;local v159;while true do if (v158~=(0 + 0)) then else v159=0;while true do if (v159~=2) then else v55=2;break;end if (v159~=(885 -(74 + 810))) then else local v178=0;while true do if (v178~=(1352 -(1262 + 89))) then else v159=1506 -(471 + 1033) ;break;end if (v178==(653 -(586 + 67))) then for v187=1 -0 ,v60 do local v188=1650 -(377 + 1273) ;local v189;local v190;local v191;local v192;while true do if (v188==1) then v191=nil;v192=nil;v188=2;end if (v188==(0 + 0)) then v189=0;v190=nil;v188=1;end if (v188==(2 + 0)) then while true do if (v189==(264 -(157 + 107))) then v190=0;v191=nil;v189=1;end if (v189==(1 -0)) then v192=nil;while true do if (v190==(267 -(164 + 102))) then if (v191==1) then v192=v21()~=0 ;elseif (v191==(2 + 0)) then v192=v24();elseif (v191~=3) then else v192=v25();end v61[v187]=v192;break;end if (v190==0) then local v205=0 + 0 ;while true do if (v205~=(0 -0)) then else v191=v21();v192=nil;v205=1 + 0 ;end if (v205~=1) then else v190=1 + 0 ;break;end end end end break;end end break;end end end v59[5 -2 ]=v21();v178=1915 -(144 + 1770) ;end end end if (v159==(1823 -(786 + 1037))) then local v179=0;while true do if (v179==0) then v60=v23();v61={};v179=1848 -(1755 + 92) ;end if (v179~=1) then else v159=1;break;end end end end break;end end end if (v55~=2) then else local v160=0;while true do local v161=0;while true do if (v161~=0) then else if (v160~=(0 + 0)) then else local v180=0;local v181;while true do if (v180~=(0 + 0)) then else v181=0 -0 ;while true do if (v181~=1) then else v160=1 + 0 ;break;end if (v181==0) then for v197=1,v23() do local v198=1656 -(1205 + 451) ;local v199;local v200;local v201;while true do if (v198~=(0 -0)) then else v199=0;v200=nil;v198=1;end if (v198==(1 + 0)) then v201=nil;while true do if (v199==0) then local v206=0;while true do if (v206~=0) then else v200=0;v201=nil;v206=901 -(352 + 548) ;end if (v206~=(1 + 0)) then else v199=1;break;end end end if (v199==1) then while true do if (v200~=(0 -0)) then else v201=v21();if (v20(v201,1396 -(10 + 1385) ,1)==(0 + 0)) then local v207=1525 -(888 + 637) ;local v208;local v209;local v210;local v211;while true do if (v207~=(4 -2)) then else while true do if (v208~=0) then else v209=v20(v201,8 -6 ,6 -3 );v210=v20(v201,4,6);v208=1;end if (v208~=3) then else if (v20(v210,1917 -(133 + 1781) ,3)~=(1665 -(93 + 1571))) then else v211[4]=v61[v211[4]];end v56[v197]=v211;break;end if (v208~=(1308 -(364 + 943))) then else v211={v22(),v22(),nil,nil};if (v209==(660 -(420 + 240))) then local v219=0 -0 ;while true do if (v219==0) then v211[2 + 1 ]=v22();v211[4]=v22();break;end end elseif (v209==1) then v211[3]=v23();elseif (v209==2) then v211[3]=v23() -((2 + 0)^(605 -(258 + 331))) ;elseif (v209~=(6 -3)) then else local v225=0 + 0 ;local v226;while true do if (v225~=(0 + 0)) then else v226=0;while true do if (v226==0) then v211[3 -0 ]=v23() -(2^(1 + 15)) ;v211[4]=v22();break;end end break;end end end v208=2;end if (v208~=(1020 -(560 + 458))) then else local v215=0;local v216;while true do if (v215==(0 -0)) then v216=0;while true do if (v216==0) then local v224=0 + 0 ;while true do if ((3 -2)==v224) then v216=1 + 0 ;break;end if (v224==0) then if (v20(v210,167 -(98 + 68) ,562 -(373 + 188) )~=(1 -0)) then else v211[1 + 1 ]=v61[v211[6 -4 ]];end if (v20(v210,1 + 1 ,2 + 0 )==(1 + 0)) then v211[3]=v61[v211[1855 -(1059 + 793) ]];end v224=1;end end end if (v216==(1 -0)) then v208=328 -(153 + 172) ;break;end end break;end end end end break;end if (1~=v207) then else local v212=0;while true do if (v212~=(641 -(96 + 544))) then else v207=2;break;end if (v212==(1607 -(1393 + 214))) then v210=nil;v211=nil;v212=1;end end end if (v207==0) then local v213=1623 -(455 + 1168) ;while true do if (v213~=(0 + 0)) then else v208=0;v209=nil;v213=1 + 0 ;end if (v213~=(561 -(350 + 210))) then else v207=1 -0 ;break;end end end end end break;end end break;end end break;end end end for v202=2 -1 ,v23() do v57[v202-(274 -(54 + 219)) ]=v28();end v181=2 -1 ;end end break;end end end if (1~=v160) then else local v182=0 + 0 ;while true do if (v182~=0) then else for v193=1 -0 ,v23() do v58[v193]=v23();end return v59;end end end break;end end end end v115=1;end end end if (v109==1) then v106=1;break;end end break;end end end if (v106~=1) then else if (v55==(755 -(148 + 607))) then local v110=0;local v111;while true do if (v110==(71 -(61 + 10))) then v111=0;while true do if (v111==(1 -0)) then local v140=0;while true do if (v140~=1) then else v111=2;break;end if (v140==(1941 -(870 + 1071))) then v58={};v59={v56,v57,nil,v58};v140=1;end end end if (v111~=(0 -0)) then else v56={};v57={};v111=1 + 0 ;end if (v111~=2) then else v55=1;break;end end break;end end end break;end end end break;end if (v54==1) then local v103=0 + 0 ;while true do if (v103==(0 + 0)) then v57=nil;v58=nil;v103=1;end if (v103==(1980 -(1305 + 674))) then v54=2;break;end end end if (v54==2) then local v104=0;while true do if (v104~=(1 -0)) then else v54=10 -7 ;break;end if (v104==(1818 -(1718 + 100))) then v59=nil;v60=nil;v104=1;end end end if (v54==0) then local v105=359 -(142 + 217) ;while true do if (v105==(0 -0)) then v55=0;v56=nil;v105=1;end if (v105~=1) then else v54=1 + 0 ;break;end end end end break;end if (v53==(10 -7)) then v60=nil;v61=nil;v53=4;end if (v53==(724 -(611 + 113))) then v54=0;v55=nil;v53=1732 -(235 + 1496) ;end if (v53~=(1 + 0)) then else v56=nil;v57=nil;v53=2;end end break;end if (v52==2) then v57=nil;v58=nil;v52=3;end end end local function v29(v62,v63,v64)local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==1) then v73={...};v74=v12("#",...) -1 ;v70=2;end if (0==v70) then v71=1;v72= -1;v70=1;end if (v70==3) then A,B=v27(v11(v75));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v62[4][v71] or "?" ;error("Script error at ["   .. v92   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v70==2) then v75=nil;function v75()local v81=v65;local v82=v66;local v83=v67;local v84=v27;local v85={};local v86={};local v87={};for v93=0,v74 do if (((6035 -(806 + 244))==(1304 + 3681)) and (v93>=v83)) then v85[v93-v83 ]=v73[v93 + (3 -2) ];else v87[v93]=v73[v93 + 1 + 0 ];end end local v88=(v74-v83) + (1 -(874 -(853 + 21))) ;local v89;local v90;while true do local v94=0 -0 ;local v95;while true do if ((v94==0) or ((1518 + 543)==2880)) then v95=0 -0 ;while true do if (((842 + 1010)>802) and (v95==0)) then local v107=0 + 0 ;while true do if (((1327 + 1215 + 282)>(3833 -(602 + (1541 -(630 + 205))))) and (v107==(0 + 0))) then local v112=0;while true do if ((v112==(1 + 0)) or (1873>4394)) then v107=1;break;end if ((v112==((0 -0) -0)) or ((3271 -1857)==521)) then v89=v81[v71];v90=v89[492 -(239 + 252) ];v112=1 + 0 ;end end end if ((v107==((2487 -(37 + 507)) -(473 + 1469))) or ((4934 -1504)<(2645 -(152 + 765)))) then v95=1;break;end end end if (((922 -537)==385) and (v95==1)) then if ((v90<=8) or (((25026 -19903) -(796 + 273))<(2254 -1674))) then if (((5284 -((1780 -(243 + 36)) + 142))>(1255 + 2337)) and (v90<=(628 -(459 + 166)))) then if (((3099 + 253)<=(6244 -1861)) and (v90<=(502 -((843 -485) + 143)))) then if ((v90>(0 + 0)) or ((6643 -4133)>(2748 -(51 + 9)))) then v87[v89[5 -3 ]]={};else v87[v89[4 -2 ]][v89[1 + 2 + 0 ]]=v87[v89[4]];end elseif ((v90==((1 + 1) -0)) or ((2898 -(1573 + 296))>=((4040 + 585) -2666))) then local v119=0 + 0 + 0 ;local v120;local v121;local v122;local v123;while true do if ((v119==(3 -1)) or ((3499 -(98 + 25))>=(180 + 4039))) then while true do if ((v120==0) or (1871<=32)) then local v163=0 -0 ;while true do if (((18700 -(13845 -(87 + 16)))>(182 -145)) and (v163==(31 -(24 + 7)))) then v121=0;v122=nil;v163=1421 -(1379 + 41) ;end if ((v163==1) or ((2097 + 1117)<(5725 -3682))) then v120=1174 -(961 + 212) ;break;end end end if ((1==v120) or ((1053 + 290)>(9896 -6048))) then v123=nil;while true do if ((v121==(0 + 0)) or (4225<=(529 + 329))) then local v172=(821 -(787 + 34)) + 0 ;local v173;while true do if (((1995 -(112 + (2063 -(1293 + 528))))==(880 + 761)) and (v172==0)) then v173=0 + 0 ;while true do if (((4523 -(152 + 867))>=(1762 -(651 + 781))) and (v173==(301 -(75 + 226)))) then v122=v89[4 -2 ];v123=v87[v89[1428 -(961 + 464) ]];v173=1987 -(1149 + 837) ;end if (((2722 -(74 + 197))<=((159 + 2570) -(128 + 126))) and (v173==(1 + 0))) then v121=(1 -0) + 0 ;break;end end break;end end end if ((((713 -353) + (3633 -1769))>=2186) and (v121==1)) then v87[v122 + (907 -(735 + 171)) ]=v123;v87[v122]=v123[v89[762 -(20 + 738) ]];break;end end break;end end break;end if ((v119==1) or ((3532 -((1240 -818) + 31))>(6040 -(160 + 135 + (1619 -731))))) then v122=nil;v123=nil;v119=1 + 1 ;end if ((v119==(892 -((942 -(337 + 412)) + 699))) or ((12128 -8832)<=(5208 -1943))) then v120=1387 -((1919 -(264 + 1429)) + 1161) ;v121=nil;v119=1;end end else local v124=0;local v125;while true do if (((4979 -(17 + 36))>(13616 -9275)) and (v124==0)) then v125=v89[1331 -(83 + 236 + 1010) ];v87[v125]=v87[v125](v13(v87,v125 + ((1310 -(867 + 441)) -1) ,v89[8 -5 ]));break;end end end elseif (((2726 + 578 + 1121)==(6126 -(2004 -(171 + 132)))) and (v90<=(13 -8))) then if ((v90>(3 + 1)) or ((11784 -6909)==(4267 -(608 + 753)))) then v87[v89[4 -2 ]]=v89[2 + (3 -2) ]~=(0 -0) ;else local v127=0 + 0 ;local v128;while true do if ((v127==(0 -0)) or ((702 + 666)==(240 -158))) then v128=v89[2 + 0 ];v87[v128]=v87[v128](v13(v87,v128 + ((3386 -2450) -(326 + (1353 -(85 + 659)))) ,v72));break;end end end elseif ((226<2762) and (v90<=(2 + 4))) then local v129=(2556 -(563 + 587)) -((2472 -(1039 + 758)) + 731) ;local v130;local v131;local v132;local v133;local v134;while true do if ((4545>=(3057 -(268 + (3925 -2684)))) and (v129==(354 -((918 -(564 + 164)) + 164)))) then v130=0 -0 ;v131=nil;v129=1 + 0 ;end if (((2169 + 2073)>((2697 -1581) + 754)) and (v129==(1 -0))) then local v155=(59 -(52 + 7)) + 0 ;while true do if (((2977 -2178)>=642) and (v155==(1 -0))) then v129=1131 -(672 + 457) ;break;end if ((3769==3769) and ((0 + 0 + 0)==v155)) then v132=nil;v133=nil;v155=997 -(560 + 436) ;end end end if ((v129==(1476 -(188 + (1526 -(81 + 159))))) or ((2345 + 266)<=553)) then v134=nil;while true do if ((3068>(261 + 1130)) and (v130==(4 -2))) then for v167=v131,v72 do local v168=0 + 0 ;local v169;while true do if ((((3132 + 63) -(480 + 826))<=(4449 -1494)) and (v168==(0 + 0))) then v169=0;while true do if ((3783==((2438 -(241 + 1165)) + 2751)) and (v169==(0 -0))) then v134=v134 + 1 + 0 ;v87[v167]=v132[v134];break;end end break;end end end break;end if (((4301 -(60 + 585))==(4614 -(643 + 315))) and ((1 + 0)==v130)) then local v164=171 -(28 + 143) ;local v165;while true do if (((4538 -((772 -(201 + 309)) + 824))==(1717 + 1735)) and (v164==(1784 -(1485 + 299)))) then v165=1198 -(741 + 457) ;while true do if ((v165==(1192 -(187 + 1004))) or (711>(1637 + 2149))) then v130=(3 -1) -0 ;break;end if ((v165==(0 + 0)) or (((1401 -(14 + 64)) + 45)==(2904 -(935 + 646)))) then local v183=0 -0 ;while true do if (((1436 + 2403)==(3668 + 171)) and (v183==0)) then v72=(v133 + v131) -(1 + 0 + 0) ;v134=1781 -((1842 -1023) + 962) ;v183=1 + 0 ;end if ((v183==(1 + 0 + 0)) or ((10536 -6649)<(2283 -1094))) then v165=1 + 0 ;break;end end end end break;end end end if ((v130==(1036 -(421 + 615))) or ((3393 -(13 + 1960))>(3759 -(1454 + 729)))) then local v166=0;while true do if ((1602<=(3124 -1243)) and (v166==(0 + 0))) then v131=v89[183 -(41 + 29 + 111) ];v132,v133=v84(v87[v131](v13(v87,v131 + 1 ,v89[3])));v166=1 + 0 ;end if ((2327>=(3745 -(990 + 489))) and (v166==1)) then v130=1425 -(64 + 1360) ;break;end end end end break;end end elseif ((735<(4966 -3032)) and (v90==(819 -(760 + 52)))) then v71=v89[3 + 0 ];else for v156=v89[2],v89[3 + (0 -0) ] do v87[v156]=nil;end end elseif ((v90<=(580 -(369 + 198))) or (((6928 -(206 + 727)) -(668 + 1090))==(2321 -(211 + 161)))) then if (((22440 -17606)>4068) and (v90<=(6 + 4))) then if ((v90>(25 -16)) or ((492 -309)>(5239 -2773))) then if ((v89[2]==v87[v89[4]]) or ((9458 -7019)<=(658 -381))) then v71=v71 + (1511 -(579 + 931)) ;else v71=v89[8 -5 ];end else v87[v89[1047 -(846 + 199) ]]=v87[v89[1112 -(601 + 508) ]];end elseif (((3585 -(1177 + 689))<(10911 -6990)) and (v90<=((37 -27) + 1))) then v87[v89[4 -2 ]][v89[3]]=v89[1943 -(1545 + 394) ];elseif (((627 + (4579 -(64 + 1529)))==((13575 + 988) -10950)) and (v90>(20 -8))) then do return;end else v87[v89[(548 -(35 + 508)) -3 ]]=v89[3];end elseif ((v90<=15) or ((3856 + 635)<(4887 -2225))) then if ((v90>(583 -(26 + 543))) or ((4726 -(632 + 883))>(5120 -(1198 + 226)))) then v87[v89[8 -6 ]]();elseif ((v87[v89[2]]==v89[11 -7 ]) or ((9367 -6467)<(3366 -2281))) then v71=v71 + 1 + 0 ;else v71=v89[10 -7 ];end elseif ((v90<=16) or ((5454 -((101 -28) + 843))<(13645 -10043))) then v87[v89[2]]=v29(v82[v89[1041 -(424 + 614) ]],nil,v64);elseif ((v90>(76 -((76 -31) + 14))) or ((507 -271)==((1723 -(598 + 896)) + 698))) then local v146=848 -(134 + 714) ;local v147;local v148;while true do if ((v146==(1355 -(346 + 1008))) or ((168 + 893)>(88 + 1688))) then while true do if ((v147==(0 -0)) or ((6687 -2016)<=(5498 -4393))) then v148=v89[2 + 0 ];v87[v148]=v87[v148]();break;end end break;end if ((v146==((890 -(390 + 105)) -(285 + 110))) or ((1359 + 1402)>4414)) then local v162=498 -(86 + 412) ;while true do if (((6334 -(5 + 1417))>(5780 -(779 + (449 -269)))) and ((0 -0)==v162)) then v147=0 -0 ;v148=nil;v162=1;end if ((v162==(3 -2)) or ((1031 + 1849)<=(1776 -990))) then v146=484 -(77 + 406) ;break;end end end end else v87[v89[2 + 0 ]]=v64[v89[5 -2 ]];end v71=v71 + 1 ;break;end end break;end end end end v70=3;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
